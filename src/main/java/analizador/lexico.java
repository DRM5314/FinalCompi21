// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: principal.lex

package analizador;
//package pruebasproyecto2;
import java_cup.runtime.*;
import lexema.Lexema;
import cic.ManejadorEstructura;

// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
class lexico implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;
  public static final int textoEtiqueta = 2;
  public static final int SCRIPTING = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2, 2
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\1\u0200\1\u0300\1\u0400\1\u0500\1\u0600\1\u0700"+
    "\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00\1\u0e00\1\u0f00"+
    "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500"+
    "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00"+
    "\1\u1d00\1\u1e00\2\u1f00\1\u2000\7\u1f00\1\u2100\1\u2200\1\u2300"+
    "\1\u1f00\1\u2400\1\u2500\2\u1f00\31\u0100\1\u2600\121\u0100\1\u2700"+
    "\4\u0100\1\u2800\1\u0100\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00"+
    "\1\u2e00\53\u0100\1\u2f00\10\u3000\31\u1f00\1\u0100\1\u3100\1\u3200"+
    "\1\u0100\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900"+
    "\1\u3a00\1\u3b00\1\u0100\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000"+
    "\1\u4100\1\u4200\1\u1f00\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700"+
    "\1\u4800\1\u4900\1\u4a00\1\u4b00\1\u4c00\1\u4d00\1\u4e00\1\u1f00"+
    "\1\u4f00\1\u5000\1\u5100\1\u1f00\3\u0100\1\u5200\1\u5300\1\u5400"+
    "\12\u1f00\4\u0100\1\u5500\17\u1f00\2\u0100\1\u5600\41\u1f00\2\u0100"+
    "\1\u5700\1\u5800\2\u1f00\1\u5900\1\u5a00\27\u0100\1\u5b00\2\u0100"+
    "\1\u5c00\45\u1f00\1\u0100\1\u5d00\1\u5e00\11\u1f00\1\u5f00\24\u1f00"+
    "\1\u6000\1\u6100\1\u1f00\1\u6200\1\u6300\1\u6400\1\u6500\2\u1f00"+
    "\1\u6600\5\u1f00\1\u6700\1\u6800\1\u6900\5\u1f00\1\u6a00\1\u6b00"+
    "\4\u1f00\1\u6c00\2\u1f00\1\u6d00\16\u1f00\246\u0100\1\u6e00\20\u0100"+
    "\1\u6f00\1\u7000\25\u0100\1\u7100\34\u0100\1\u7200\14\u1f00\2\u0100"+
    "\1\u7300\u0b06\u1f00\1\u2700\u02fe\u1f00";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\4\1\5\22\0\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\10\30\1\31\1\32\1\33\1\34\1\35\1\0"+
    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45"+
    "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55"+
    "\1\56\1\50\1\57\1\60\1\61\1\62\1\63\1\64"+
    "\1\65\1\66\1\50\1\67\1\0\1\70\1\0\1\71"+
    "\1\0\1\72\1\73\1\74\1\75\1\76\1\77\1\100"+
    "\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110"+
    "\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120"+
    "\1\121\1\122\1\123\1\124\1\125\1\126\7\0\1\3"+
    "\44\0\1\127\12\0\1\127\4\0\1\127\5\0\27\127"+
    "\1\0\37\127\1\0\u01ca\127\4\0\14\127\16\0\5\127"+
    "\7\0\1\127\1\0\1\127\21\0\165\127\1\0\2\127"+
    "\2\0\4\127\1\0\1\127\6\0\1\127\1\0\3\127"+
    "\1\0\1\127\1\0\24\127\1\0\123\127\1\0\213\127"+
    "\1\0\255\127\1\0\46\127\2\0\1\127\6\0\51\127"+
    "\10\0\55\127\1\0\1\127\1\0\2\127\1\0\2\127"+
    "\1\0\1\127\10\0\33\127\4\0\4\127\35\0\13\127"+
    "\5\0\100\127\12\130\4\0\146\127\1\0\10\127\2\0"+
    "\12\127\1\0\6\127\12\130\3\127\2\0\1\127\20\0"+
    "\73\127\2\0\145\127\16\0\12\130\54\127\4\0\1\127"+
    "\2\0\1\127\2\0\56\127\22\0\34\127\4\0\13\127"+
    "\65\0\25\127\1\0\10\127\25\0\17\127\1\0\201\127"+
    "\2\0\12\130\1\0\23\127\1\0\10\127\2\0\2\127"+
    "\2\0\26\127\1\0\7\127\1\0\1\127\3\0\4\127"+
    "\2\0\11\127\2\0\2\127\2\0\4\127\10\0\1\127"+
    "\4\0\2\127\1\0\5\127\2\0\12\130\2\127\12\0"+
    "\1\127\1\0\1\127\2\0\3\127\1\0\6\127\4\0"+
    "\2\127\2\0\26\127\1\0\7\127\1\0\2\127\1\0"+
    "\2\127\1\0\2\127\2\0\1\127\1\0\5\127\4\0"+
    "\2\127\2\0\3\127\3\0\1\127\7\0\4\127\1\0"+
    "\1\127\7\0\12\130\6\127\13\0\3\127\1\0\11\127"+
    "\1\0\3\127\1\0\26\127\1\0\7\127\1\0\2\127"+
    "\1\0\5\127\2\0\12\127\1\0\3\127\1\0\3\127"+
    "\2\0\1\127\17\0\4\127\2\0\12\130\11\0\7\127"+
    "\1\0\3\127\1\0\10\127\2\0\2\127\2\0\26\127"+
    "\1\0\7\127\1\0\2\127\1\0\5\127\2\0\11\127"+
    "\2\0\2\127\2\0\3\127\10\0\2\127\4\0\2\127"+
    "\1\0\5\127\2\0\12\130\1\0\1\127\20\0\2\127"+
    "\1\0\6\127\3\0\3\127\1\0\4\127\3\0\2\127"+
    "\1\0\1\127\1\0\2\127\3\0\2\127\3\0\3\127"+
    "\3\0\14\127\4\0\5\127\3\0\3\127\1\0\4\127"+
    "\2\0\1\127\6\0\1\127\16\0\12\130\20\0\15\127"+
    "\1\0\3\127\1\0\27\127\1\0\20\127\3\0\10\127"+
    "\1\0\3\127\1\0\4\127\7\0\2\127\1\0\3\127"+
    "\5\0\4\127\2\0\12\130\20\0\4\127\1\0\10\127"+
    "\1\0\3\127\1\0\27\127\1\0\12\127\1\0\5\127"+
    "\2\0\11\127\1\0\3\127\1\0\4\127\7\0\2\127"+
    "\7\0\1\127\1\0\4\127\2\0\12\130\1\0\2\127"+
    "\15\0\4\127\1\0\10\127\1\0\3\127\1\0\63\127"+
    "\1\0\3\127\1\0\5\127\5\0\4\127\7\0\5\127"+
    "\2\0\12\130\12\0\6\127\2\0\2\127\1\0\22\127"+
    "\3\0\30\127\1\0\11\127\1\0\1\127\2\0\7\127"+
    "\3\0\1\127\4\0\6\127\1\0\1\127\1\0\10\127"+
    "\6\0\12\130\2\0\2\127\15\0\72\127\5\0\17\127"+
    "\1\0\12\130\47\0\2\127\1\0\1\127\1\0\5\127"+
    "\1\0\30\127\1\0\1\127\1\0\27\127\2\0\5\127"+
    "\1\0\1\127\1\0\6\127\2\0\12\130\2\0\4\127"+
    "\40\0\1\127\27\0\2\127\6\0\12\130\13\0\1\127"+
    "\1\0\1\127\1\0\1\127\4\0\12\127\1\0\44\127"+
    "\4\0\24\127\1\0\22\127\1\0\44\127\11\0\1\127"+
    "\71\0\100\127\12\130\6\0\100\127\12\130\4\127\2\0"+
    "\46\127\1\0\1\127\5\0\1\127\2\0\53\127\1\0"+
    "\115\127\1\0\4\127\2\0\7\127\1\0\1\127\1\0"+
    "\4\127\2\0\51\127\1\0\4\127\2\0\41\127\1\0"+
    "\4\127\2\0\7\127\1\0\1\127\1\0\4\127\2\0"+
    "\17\127\1\0\71\127\1\0\4\127\2\0\103\127\2\0"+
    "\3\127\40\0\20\127\20\0\126\127\2\0\6\127\3\0"+
    "\u016c\127\2\0\21\127\1\0\32\127\5\0\113\127\3\0"+
    "\13\127\7\0\15\127\1\0\7\127\13\0\25\127\13\0"+
    "\24\127\14\0\15\127\1\0\3\127\1\0\2\127\14\0"+
    "\124\127\3\0\1\127\4\0\2\127\2\0\12\130\41\0"+
    "\3\127\2\0\12\130\6\0\131\127\7\0\53\127\5\0"+
    "\106\127\12\0\37\127\1\0\14\127\4\0\14\127\12\0"+
    "\12\130\36\127\2\0\5\127\13\0\54\127\4\0\32\127"+
    "\6\0\12\130\46\0\34\127\4\0\77\127\1\0\35\127"+
    "\2\0\1\127\12\130\6\0\12\130\15\0\1\127\10\0"+
    "\17\127\101\0\114\127\4\0\12\130\21\0\11\127\14\0"+
    "\60\127\12\130\72\127\14\0\70\127\10\0\12\130\3\0"+
    "\3\127\12\130\44\127\2\0\11\127\7\0\53\127\2\0"+
    "\3\127\20\0\3\127\1\0\47\127\5\0\372\127\1\0"+
    "\33\127\2\0\6\127\2\0\46\127\2\0\6\127\2\0"+
    "\10\127\1\0\1\127\1\0\1\127\1\0\1\127\1\0"+
    "\37\127\2\0\65\127\1\0\7\127\1\0\1\127\3\0"+
    "\3\127\1\0\7\127\3\0\4\127\2\0\6\127\4\0"+
    "\15\127\5\0\3\127\1\0\7\127\33\0\2\15\2\0"+
    "\2\10\12\0\2\3\25\0\2\127\23\0\1\127\34\0"+
    "\1\127\15\0\1\127\20\0\15\127\63\0\41\127\21\0"+
    "\1\127\4\0\1\127\2\0\12\127\1\0\1\127\3\0"+
    "\5\127\6\0\1\127\1\0\1\127\1\0\1\127\1\0"+
    "\4\127\1\0\13\127\2\0\4\127\5\0\5\127\4\0"+
    "\1\127\21\0\51\127\u022d\0\64\127\26\0\57\127\1\0"+
    "\57\127\1\0\205\127\6\0\11\127\14\0\46\127\1\0"+
    "\1\127\5\0\1\127\2\0\70\127\7\0\1\127\17\0"+
    "\30\127\11\0\7\127\1\0\7\127\1\0\7\127\1\0"+
    "\7\127\1\0\7\127\1\0\7\127\1\0\7\127\1\0"+
    "\7\127\1\0\40\127\57\0\1\127\325\0\3\127\31\0"+
    "\17\127\1\0\5\127\2\0\5\127\4\0\126\127\2\0"+
    "\2\127\2\0\3\127\1\0\132\127\1\0\4\127\5\0"+
    "\53\127\1\0\136\127\21\0\33\127\65\0\306\127\112\0"+
    "\360\127\20\0\215\127\103\0\56\127\2\0\15\127\3\0"+
    "\20\127\12\130\2\127\24\0\63\127\1\0\12\127\1\0"+
    "\163\127\45\0\11\127\2\0\147\127\2\0\65\127\2\0"+
    "\5\127\60\0\61\127\30\0\64\127\14\0\106\127\12\0"+
    "\12\130\6\0\30\127\3\0\1\127\1\0\3\127\12\130"+
    "\44\127\2\0\44\127\14\0\35\127\3\0\101\127\16\0"+
    "\1\127\12\130\6\0\20\127\12\130\5\127\1\0\67\127"+
    "\11\0\16\127\2\0\12\130\6\0\27\127\3\0\111\127"+
    "\30\0\3\127\2\0\20\127\2\0\5\127\12\0\6\127"+
    "\2\0\6\127\2\0\6\127\11\0\7\127\1\0\7\127"+
    "\1\0\53\127\1\0\14\127\10\0\173\127\1\0\2\127"+
    "\2\0\12\130\6\0\244\127\14\0\27\127\4\0\61\127"+
    "\4\0\u0100\3\156\127\2\0\152\127\46\0\7\127\14\0"+
    "\5\127\5\0\14\127\1\0\15\127\1\0\5\127\1\0"+
    "\1\127\1\0\2\127\1\0\2\127\1\0\154\127\41\0"+
    "\153\127\22\0\100\127\2\0\66\127\50\0\14\127\4\0"+
    "\20\127\20\0\20\127\3\0\2\127\30\0\3\127\40\0"+
    "\5\127\1\0\207\127\23\0\12\130\7\0\32\127\4\0"+
    "\1\127\1\0\32\127\13\0\131\127\3\0\6\127\2\0"+
    "\6\127\2\0\6\127\2\0\3\127\43\0\14\127\1\0"+
    "\32\127\1\0\23\127\1\0\2\127\1\0\17\127\2\0"+
    "\16\127\42\0\173\127\105\0\65\127\210\0\1\127\202\0"+
    "\35\127\3\0\61\127\17\0\1\127\37\0\40\127\15\0"+
    "\36\127\5\0\53\127\5\0\36\127\2\0\44\127\4\0"+
    "\10\127\1\0\5\127\52\0\236\127\2\0\12\130\6\0"+
    "\44\127\4\0\44\127\4\0\50\127\10\0\64\127\234\0"+
    "\67\127\11\0\26\127\12\0\10\127\230\0\6\127\2\0"+
    "\1\127\1\0\54\127\1\0\2\127\3\0\1\127\2\0"+
    "\27\127\12\0\27\127\11\0\37\127\101\0\23\127\1\0"+
    "\2\127\12\0\26\127\12\0\32\127\106\0\70\127\6\0"+
    "\2\127\100\0\4\127\1\0\2\127\5\0\10\127\1\0"+
    "\3\127\1\0\35\127\2\0\3\127\4\0\1\127\40\0"+
    "\35\127\3\0\35\127\43\0\10\127\1\0\36\127\31\0"+
    "\66\127\12\0\26\127\12\0\23\127\15\0\22\127\156\0"+
    "\111\127\67\0\63\127\15\0\63\127\15\0\50\127\10\0"+
    "\12\130\306\0\35\127\12\0\1\127\10\0\41\127\217\0"+
    "\27\127\11\0\107\127\37\0\12\130\17\0\74\127\25\0"+
    "\31\127\7\0\12\130\6\0\65\127\1\0\12\130\4\0"+
    "\3\127\11\0\44\127\2\0\1\127\11\0\105\127\4\0"+
    "\4\127\3\0\12\130\1\127\1\0\1\127\43\0\22\127"+
    "\1\0\45\127\6\0\1\127\101\0\7\127\1\0\1\127"+
    "\1\0\4\127\1\0\17\127\1\0\12\127\7\0\73\127"+
    "\5\0\12\130\6\0\4\127\1\0\10\127\2\0\2\127"+
    "\2\0\26\127\1\0\7\127\1\0\2\127\1\0\5\127"+
    "\1\0\12\127\2\0\2\127\2\0\3\127\2\0\1\127"+
    "\6\0\1\127\5\0\7\127\2\0\7\127\3\0\5\127"+
    "\213\0\113\127\5\0\12\130\4\0\2\127\40\0\106\127"+
    "\1\0\1\127\10\0\12\130\246\0\66\127\2\0\11\127"+
    "\27\0\6\127\42\0\101\127\3\0\1\127\13\0\12\130"+
    "\46\0\71\127\7\0\12\130\66\0\33\127\2\0\17\127"+
    "\4\0\12\130\306\0\73\127\145\0\100\127\12\130\25\0"+
    "\1\127\240\0\10\127\2\0\56\127\2\0\10\127\1\0"+
    "\2\127\33\0\77\127\10\0\1\127\10\0\112\127\3\0"+
    "\1\127\42\0\71\127\7\0\11\127\1\0\55\127\1\0"+
    "\11\127\17\0\12\130\30\0\36\127\2\0\26\127\1\0"+
    "\16\127\111\0\7\127\1\0\2\127\1\0\54\127\3\0"+
    "\1\127\1\0\2\127\1\0\11\127\10\0\12\130\6\0"+
    "\6\127\1\0\2\127\1\0\45\127\1\0\2\127\1\0"+
    "\6\127\7\0\12\130\u0136\0\27\127\11\0\232\127\146\0"+
    "\157\127\21\0\304\127\274\0\57\127\321\0\107\127\271\0"+
    "\71\127\7\0\37\127\1\0\12\130\146\0\36\127\2\0"+
    "\5\127\13\0\67\127\11\0\4\127\14\0\12\130\11\0"+
    "\25\127\5\0\23\127\260\0\100\127\200\0\113\127\4\0"+
    "\71\127\7\0\21\127\100\0\2\127\1\0\1\127\34\0"+
    "\370\127\10\0\363\127\15\0\37\127\61\0\3\127\21\0"+
    "\4\127\10\0\u018c\127\4\0\153\127\5\0\15\127\3\0"+
    "\11\127\7\0\12\127\3\0\2\127\306\0\5\127\3\0"+
    "\6\127\10\0\10\127\2\0\7\127\36\0\4\127\224\0"+
    "\3\127\273\0\125\127\1\0\107\127\1\0\2\127\2\0"+
    "\1\127\2\0\2\127\2\0\4\127\1\0\14\127\1\0"+
    "\1\127\1\0\7\127\1\0\101\127\1\0\4\127\2\0"+
    "\10\127\1\0\7\127\1\0\34\127\1\0\4\127\1\0"+
    "\5\127\1\0\1\127\3\0\7\127\1\0\u0154\127\2\0"+
    "\31\127\1\0\31\127\1\0\37\127\1\0\31\127\1\0"+
    "\37\127\1\0\31\127\1\0\37\127\1\0\31\127\1\0"+
    "\37\127\1\0\31\127\1\0\10\127\2\0\62\130\67\127"+
    "\4\0\62\127\10\0\1\127\16\0\1\127\26\0\5\127"+
    "\1\0\17\127\120\0\7\127\1\0\21\127\2\0\7\127"+
    "\1\0\2\127\1\0\5\127\325\0\55\127\3\0\16\127"+
    "\2\0\12\130\4\0\1\127\u0171\0\60\127\12\130\6\0"+
    "\305\127\13\0\7\127\51\0\114\127\4\0\12\130\246\0"+
    "\4\127\1\0\33\127\1\0\2\127\1\0\1\127\2\0"+
    "\1\127\1\0\12\127\1\0\4\127\1\0\1\127\1\0"+
    "\1\127\6\0\1\127\4\0\1\127\1\0\1\127\1\0"+
    "\1\127\1\0\3\127\1\0\2\127\1\0\1\127\2\0"+
    "\1\127\1\0\1\127\1\0\1\127\1\0\1\127\1\0"+
    "\1\127\1\0\2\127\1\0\1\127\2\0\4\127\1\0"+
    "\7\127\1\0\4\127\1\0\4\127\1\0\1\127\1\0"+
    "\12\127\1\0\21\127\5\0\3\127\1\0\5\127\1\0"+
    "\21\127\164\0\32\127\6\0\32\127\6\0\32\127\166\0"+
    "\327\127\51\0\65\127\13\0\336\127\2\0\u0182\127\16\0"+
    "\u0131\127\37\0\36\127\342\0";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[29696];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\0\1\1\1\2\2\3\1\4\3\2\1\5"+
    "\1\6\1\7\1\10\1\11\1\12\1\2\1\13\2\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\2\16\22\1\23"+
    "\1\24\16\22\1\25\1\2\1\26\1\27\1\2\2\3"+
    "\1\4\3\2\1\30\1\31\1\7\1\10\1\11\1\12"+
    "\1\2\1\32\2\1\1\15\1\16\1\33\1\34\1\35"+
    "\1\2\16\22\1\36\1\37\10\22\1\25\1\2\1\26"+
    "\2\0\1\40\1\41\1\0\1\42\36\0\1\43\5\0"+
    "\2\44\1\0\1\45\1\14\1\0\2\14\1\0\1\46"+
    "\1\47\1\50\1\0\11\22\1\51\24\22\1\52\12\22"+
    "\1\53\1\40\1\41\1\0\1\54\1\43\2\0\2\44"+
    "\1\0\1\45\1\1\1\47\1\0\11\22\1\51\20\22"+
    "\1\53\1\0\1\40\1\0\1\55\1\0\1\42\40\0"+
    "\1\56\1\0\1\56\1\57\1\44\1\45\1\14\1\0"+
    "\2\14\2\0\1\22\1\60\10\22\1\61\4\22\1\62"+
    "\15\22\1\63\17\22\1\64\5\22\1\0\1\57\1\44"+
    "\1\45\1\1\1\0\1\22\1\60\4\22\1\62\25\22"+
    "\1\0\1\40\2\0\1\65\40\0\1\66\1\57\1\44"+
    "\1\45\1\14\1\67\2\14\2\0\3\22\1\70\3\22"+
    "\1\71\12\22\1\72\1\73\1\74\1\22\1\75\11\22"+
    "\1\76\3\22\1\77\2\22\1\100\4\22\1\101\1\22"+
    "\1\102\1\22\1\103\2\22\1\104\1\105\1\22\1\66"+
    "\1\57\1\44\1\45\1\0\3\22\1\72\1\73\1\74"+
    "\1\22\1\75\11\22\1\76\2\22\1\77\4\22\1\104"+
    "\1\0\1\40\26\0\1\106\4\0\1\57\1\45\3\14"+
    "\2\0\4\22\1\107\2\22\1\110\23\22\1\111\2\22"+
    "\1\112\1\113\1\22\1\0\5\22\1\0\1\114\1\57"+
    "\1\45\1\0\16\22\1\111\5\22\6\0\1\40\1\0"+
    "\1\115\22\0\1\116\3\0\1\117\1\0\1\57\2\0"+
    "\2\22\1\120\1\22\1\121\1\122\1\22\1\123\3\22"+
    "\1\124\2\22\1\125\1\126\6\22\1\127\5\22\2\0"+
    "\1\22\1\130\1\22\1\0\1\57\1\0\3\22\1\125"+
    "\1\126\6\22\1\127\5\22\3\0\1\131\3\0\6\40"+
    "\1\0\1\115\3\0\1\131\3\0\1\132\6\0\1\133"+
    "\1\134\3\22\1\135\4\22\1\136\3\22\1\137\2\22"+
    "\1\140\2\22\2\0\1\22\1\141\1\0\1\134\6\22"+
    "\1\137\2\22\1\140\2\22\1\0\1\142\4\0\3\40"+
    "\1\131\3\40\2\0\1\142\10\0\2\22\1\143\1\144"+
    "\1\22\1\145\5\22\1\146\2\22\2\0\1\22\1\0"+
    "\7\22\1\146\2\22\4\0\1\40\1\142\4\40\7\0"+
    "\7\22\3\147\1\150\1\22\1\0\1\151\1\22\1\0"+
    "\6\22\1\150\1\22\1\0\1\152\2\0\4\40\1\0"+
    "\1\152\3\0\1\55\5\0\1\153\2\22\1\154\1\22"+
    "\1\155\1\22\1\147\1\156\1\0\1\22\1\157\1\153"+
    "\3\22\1\155\2\22\2\0\1\160\1\40\1\152\2\40"+
    "\2\0\1\160\1\42\5\0\1\42\4\0\1\22\1\161"+
    "\2\22\1\147\1\162\2\22\1\163\3\22\1\164\1\0"+
    "\2\40\1\160\1\164\7\0\1\22\1\165\1\22\1\147"+
    "\2\22\1\165\2\22\1\0\1\164\1\40\1\0\1\166"+
    "\2\0\1\166\1\0\1\22\1\167\6\147\1\170\1\22"+
    "\1\167\1\170\1\171\1\40\1\171\7\0\1\22\3\147"+
    "\1\131\3\147\1\22\1\171\11\0\1\131\3\0\1\22"+
    "\1\147\1\142\4\147\1\22\3\0\1\131\4\0\1\142"+
    "\4\0\1\22\4\147\1\22\1\0\1\142\10\0\1\22"+
    "\1\147\1\152\2\147\1\22\5\0\1\152\2\0\1\172"+
    "\2\147\1\160\1\172\1\0\1\152\4\0\1\160\1\164"+
    "\1\147\2\0\1\160\1\164\1\0\1\147\1\164\2\0"+
    "\1\171\1\0\2\171";

  private static int [] zzUnpackAction() {
    int [] result = new int[1089];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\131\0\262\0\u010b\0\u010b\0\u0164\0\u01bd\0\u0216"+
    "\0\u026f\0\u02c8\0\u010b\0\u010b\0\u010b\0\u010b\0\u010b\0\u0321"+
    "\0\u037a\0\u03d3\0\u042c\0\u0485\0\u010b\0\u010b\0\u04de\0\u0537"+
    "\0\u0590\0\u05e9\0\u0642\0\u069b\0\u06f4\0\u074d\0\u07a6\0\u07ff"+
    "\0\u0858\0\u08b1\0\u090a\0\u0963\0\u09bc\0\u0a15\0\u0a6e\0\u0ac7"+
    "\0\u010b\0\u010b\0\u0b20\0\u0b79\0\u0bd2\0\u0c2b\0\u0c84\0\u0cdd"+
    "\0\u0d36\0\u0d8f\0\u0de8\0\u0e41\0\u0e9a\0\u0ef3\0\u0f4c\0\u0fa5"+
    "\0\u010b\0\u0ffe\0\u010b\0\u03d3\0\u03d3\0\u03d3\0\u1057\0\u10b0"+
    "\0\u1109\0\u1162\0\u11bb\0\u03d3\0\u03d3\0\u03d3\0\u03d3\0\u03d3"+
    "\0\u1214\0\u126d\0\u03d3\0\u12c6\0\u131f\0\u03d3\0\u03d3\0\u04de"+
    "\0\u1378\0\u0590\0\u13d1\0\u142a\0\u1483\0\u14dc\0\u1535\0\u158e"+
    "\0\u15e7\0\u1640\0\u1699\0\u16f2\0\u174b\0\u17a4\0\u17fd\0\u1856"+
    "\0\u18af\0\u03d3\0\u03d3\0\u1908\0\u1961\0\u19ba\0\u1a13\0\u1a6c"+
    "\0\u1ac5\0\u1b1e\0\u1b77\0\u03d3\0\u1bd0\0\u03d3\0\u010b\0\u1c29"+
    "\0\u1c82\0\u010b\0\u1cdb\0\u010b\0\u1d34\0\u1d8d\0\u1de6\0\u1e3f"+
    "\0\u1e98\0\u1ef1\0\u1f4a\0\u1fa3\0\u1ffc\0\u2055\0\u20ae\0\u2107"+
    "\0\u2160\0\u21b9\0\u2212\0\u226b\0\u22c4\0\u231d\0\u2376\0\u23cf"+
    "\0\u2428\0\u2481\0\u24da\0\u2533\0\u258c\0\u25e5\0\u263e\0\u2697"+
    "\0\u26f0\0\u2749\0\u010b\0\u27a2\0\u27fb\0\u2854\0\u28ad\0\u2906"+
    "\0\u295f\0\u29b8\0\u037a\0\u2a11\0\u2a6a\0\u2ac3\0\u2b1c\0\u2b75"+
    "\0\u2bce\0\u03d3\0\u010b\0\u03d3\0\u2c27\0\u2c80\0\u2cd9\0\u2d32"+
    "\0\u2d8b\0\u2de4\0\u2e3d\0\u2e96\0\u2eef\0\u2f48\0\u069b\0\u2fa1"+
    "\0\u2ffa\0\u3053\0\u30ac\0\u3105\0\u315e\0\u31b7\0\u3210\0\u3269"+
    "\0\u32c2\0\u331b\0\u3374\0\u33cd\0\u3426\0\u347f\0\u34d8\0\u3531"+
    "\0\u358a\0\u35e3\0\u363c\0\u069b\0\u3695\0\u36ee\0\u3747\0\u37a0"+
    "\0\u37f9\0\u3852\0\u38ab\0\u3904\0\u395d\0\u39b6\0\u010b\0\u3a0f"+
    "\0\u03d3\0\u1109\0\u03d3\0\u03d3\0\u3a68\0\u3ac1\0\u3b1a\0\u3b73"+
    "\0\u126d\0\u3bcc\0\u3c25\0\u03d3\0\u3c7e\0\u3cd7\0\u3d30\0\u3d89"+
    "\0\u3de2\0\u3e3b\0\u3e94\0\u3eed\0\u3f46\0\u3f9f\0\u1483\0\u3ff8"+
    "\0\u4051\0\u40aa\0\u4103\0\u415c\0\u41b5\0\u420e\0\u4267\0\u42c0"+
    "\0\u4319\0\u4372\0\u43cb\0\u4424\0\u447d\0\u44d6\0\u452f\0\u03d3"+
    "\0\u4588\0\u45e1\0\u463a\0\u010b\0\u4693\0\u03d3\0\u46ec\0\u4745"+
    "\0\u479e\0\u47f7\0\u4850\0\u48a9\0\u4902\0\u495b\0\u49b4\0\u4a0d"+
    "\0\u4a66\0\u4abf\0\u4b18\0\u4b71\0\u4bca\0\u4c23\0\u4c7c\0\u4cd5"+
    "\0\u4d2e\0\u4d87\0\u4de0\0\u4e39\0\u4e92\0\u4eeb\0\u4f44\0\u4f9d"+
    "\0\u4ff6\0\u504f\0\u50a8\0\u5101\0\u515a\0\u51b3\0\u010b\0\u520c"+
    "\0\u03d3\0\u5265\0\u52be\0\u5317\0\u5370\0\u53c9\0\u5422\0\u547b"+
    "\0\u54d4\0\u552d\0\u5586\0\u069b\0\u55df\0\u5638\0\u5691\0\u56ea"+
    "\0\u5743\0\u579c\0\u57f5\0\u584e\0\u069b\0\u58a7\0\u5900\0\u5959"+
    "\0\u59b2\0\u069b\0\u5a0b\0\u5a64\0\u5abd\0\u5b16\0\u5b6f\0\u5bc8"+
    "\0\u5c21\0\u5c7a\0\u5cd3\0\u5d2c\0\u5d85\0\u5dde\0\u5e37\0\u069b"+
    "\0\u5e90\0\u5ee9\0\u5f42\0\u5f9b\0\u5ff4\0\u604d\0\u60a6\0\u60ff"+
    "\0\u6158\0\u61b1\0\u620a\0\u6263\0\u62bc\0\u6315\0\u636e\0\u069b"+
    "\0\u63c7\0\u6420\0\u6479\0\u64d2\0\u652b\0\u6584\0\u65dd\0\u6636"+
    "\0\u668f\0\u66e8\0\u6741\0\u679a\0\u1483\0\u67f3\0\u684c\0\u68a5"+
    "\0\u68fe\0\u1483\0\u6957\0\u69b0\0\u6a09\0\u6a62\0\u6abb\0\u6b14"+
    "\0\u6b6d\0\u6bc6\0\u6c1f\0\u6c78\0\u6cd1\0\u6d2a\0\u6d83\0\u6ddc"+
    "\0\u6e35\0\u6e8e\0\u6ee7\0\u6f40\0\u6f99\0\u6ff2\0\u704b\0\u70a4"+
    "\0\u70fd\0\u7156\0\u71af\0\u010b\0\u7208\0\u7261\0\u72ba\0\u7313"+
    "\0\u736c\0\u73c5\0\u741e\0\u7477\0\u74d0\0\u7529\0\u7582\0\u75db"+
    "\0\u7634\0\u768d\0\u76e6\0\u773f\0\u7798\0\u77f1\0\u784a\0\u78a3"+
    "\0\u78fc\0\u7955\0\u79ae\0\u7a07\0\u7a60\0\u7ab9\0\u7b12\0\u7b6b"+
    "\0\u7bc4\0\u7c1d\0\u7c76\0\u7ccf\0\u010b\0\u7d28\0\u7d81\0\u7dda"+
    "\0\u7e33\0\u010b\0\u7e8c\0\u7ee5\0\u7f3e\0\u7f97\0\u7ff0\0\u8049"+
    "\0\u80a2\0\u069b\0\u80fb\0\u8154\0\u81ad\0\u069b\0\u8206\0\u825f"+
    "\0\u82b8\0\u8311\0\u836a\0\u83c3\0\u841c\0\u8475\0\u84ce\0\u8527"+
    "\0\u069b\0\u069b\0\u069b\0\u8580\0\u069b\0\u85d9\0\u8632\0\u868b"+
    "\0\u86e4\0\u873d\0\u8796\0\u87ef\0\u8848\0\u88a1\0\u88fa\0\u8953"+
    "\0\u89ac\0\u8a05\0\u069b\0\u8a5e\0\u8ab7\0\u069b\0\u8b10\0\u8b69"+
    "\0\u8bc2\0\u8c1b\0\u069b\0\u8c74\0\u069b\0\u8ccd\0\u069b\0\u8d26"+
    "\0\u8d7f\0\u069b\0\u069b\0\u8dd8\0\u03d3\0\u8e31\0\u8e8a\0\u8ee3"+
    "\0\u8f3c\0\u8f95\0\u8fee\0\u9047\0\u1483\0\u1483\0\u1483\0\u90a0"+
    "\0\u1483\0\u90f9\0\u9152\0\u91ab\0\u9204\0\u925d\0\u92b6\0\u930f"+
    "\0\u9368\0\u93c1\0\u941a\0\u9473\0\u94cc\0\u1483\0\u9525\0\u957e"+
    "\0\u95d7\0\u9630\0\u1483\0\u9689\0\u96e2\0\u973b\0\u9794\0\u97ed"+
    "\0\u9846\0\u989f\0\u98f8\0\u9951\0\u99aa\0\u9a03\0\u9a5c\0\u9ab5"+
    "\0\u9b0e\0\u9b67\0\u9bc0\0\u9c19\0\u9c72\0\u9ccb\0\u9d24\0\u9d7d"+
    "\0\u9dd6\0\u9e2f\0\u9e88\0\u010b\0\u9ee1\0\u9f3a\0\u9f93\0\u9fec"+
    "\0\ua045\0\ua09e\0\ua0f7\0\ua150\0\ua1a9\0\ua202\0\ua25b\0\ua2b4"+
    "\0\ua30d\0\ua366\0\ua3bf\0\u069b\0\ua418\0\ua471\0\u069b\0\ua4ca"+
    "\0\ua523\0\ua57c\0\ua5d5\0\ua62e\0\ua687\0\ua6e0\0\ua739\0\ua792"+
    "\0\ua7eb\0\ua844\0\ua89d\0\ua8f6\0\ua94f\0\ua9a8\0\uaa01\0\uaa5a"+
    "\0\uaab3\0\uab0c\0\u069b\0\uab65\0\uabbe\0\u069b\0\u069b\0\uac17"+
    "\0\uac70\0\uacc9\0\uad22\0\uad7b\0\uadd4\0\uae2d\0\uae86\0\u069b"+
    "\0\uaedf\0\uaf38\0\uaf91\0\uafea\0\ub043\0\ub09c\0\ub0f5\0\ub14e"+
    "\0\ub1a7\0\ub200\0\ub259\0\ub2b2\0\ub30b\0\ub364\0\ub3bd\0\ub416"+
    "\0\ub46f\0\u1483\0\ub4c8\0\ub521\0\ub57a\0\ub5d3\0\ub62c\0\ub685"+
    "\0\ub6de\0\ub737\0\ub790\0\ub7e9\0\ub842\0\ub89b\0\ub8f4\0\u010b"+
    "\0\ub94d\0\ub9a6\0\ub9ff\0\uba58\0\ubab1\0\ubb0a\0\ubb63\0\ubbbc"+
    "\0\ubc15\0\ubc6e\0\ubcc7\0\ubd20\0\ubd79\0\ubdd2\0\ube2b\0\ube84"+
    "\0\ubedd\0\ubf36\0\u010b\0\ubf8f\0\ubfe8\0\uc041\0\u010b\0\uc09a"+
    "\0\uc0f3\0\uc14c\0\uc1a5\0\uc1fe\0\uc257\0\u069b\0\uc2b0\0\u069b"+
    "\0\u069b\0\uc309\0\u069b\0\uc362\0\uc3bb\0\uc414\0\u069b\0\uc46d"+
    "\0\uc4c6\0\u069b\0\u069b\0\uc51f\0\uc578\0\uc5d1\0\uc62a\0\uc683"+
    "\0\uc6dc\0\u069b\0\uc735\0\uc78e\0\uc7e7\0\uc840\0\uc899\0\uc8f2"+
    "\0\uc94b\0\uc9a4\0\u069b\0\uc9fd\0\uca56\0\ucaaf\0\ucb08\0\ucb61"+
    "\0\ucbba\0\ucc13\0\u1483\0\u1483\0\ucc6c\0\uccc5\0\ucd1e\0\ucd77"+
    "\0\ucdd0\0\uce29\0\u1483\0\uce82\0\ucedb\0\ucf34\0\ucf8d\0\ucfe6"+
    "\0\ud03f\0\ud098\0\ud0f1\0\u03d3\0\ud14a\0\ud1a3\0\ud1fc\0\ud255"+
    "\0\ud2ae\0\ud307\0\ud360\0\ud3b9\0\ud412\0\ud46b\0\u03d3\0\ud4c4"+
    "\0\ud51d\0\ud576\0\u1e98\0\ud5cf\0\ud628\0\ud681\0\u010b\0\ud6da"+
    "\0\ud733\0\ud78c\0\ud7e5\0\ud83e\0\ud897\0\u7f3e\0\u010b\0\ud8f0"+
    "\0\ud949\0\ud9a2\0\u069b\0\ud9fb\0\uda54\0\udaad\0\udb06\0\u069b"+
    "\0\udb5f\0\udbb8\0\udc11\0\u069b\0\udc6a\0\udcc3\0\u069b\0\udd1c"+
    "\0\udd75\0\uddce\0\ude27\0\ude80\0\u069b\0\uded9\0\u03d3\0\udf32"+
    "\0\udf8b\0\udfe4\0\ue03d\0\ue096\0\ue0ef\0\u1483\0\ue148\0\ue1a1"+
    "\0\u1483\0\ue1fa\0\ue253\0\ue2ac\0\u03d3\0\ue305\0\ue35e\0\ue3b7"+
    "\0\ue410\0\ue469\0\ue4c2\0\ue51b\0\u3a0f\0\ue574\0\ue5cd\0\ue626"+
    "\0\ue67f\0\ue6d8\0\u1e98\0\ue731\0\ue78a\0\ue7e3\0\ue83c\0\ue895"+
    "\0\ue8ee\0\ue947\0\ue9a0\0\ue9f9\0\uea52\0\u069b\0\u069b\0\ueaab"+
    "\0\u069b\0\ueb04\0\ueb5d\0\uebb6\0\uec0f\0\uec68\0\u069b\0\uecc1"+
    "\0\ued1a\0\ued73\0\uedcc\0\uee25\0\uee7e\0\ueed7\0\uef30\0\uef89"+
    "\0\uefe2\0\uf03b\0\uf094\0\uf0ed\0\u1483\0\uf146\0\uf19f\0\uf1f8"+
    "\0\uf251\0\uf2aa\0\uf303\0\uf35c\0\u3a0f\0\uf3b5\0\uf40e\0\uf467"+
    "\0\uf4c0\0\uf519\0\uf572\0\uf5cb\0\uf624\0\uf67d\0\uf6d6\0\uf72f"+
    "\0\uf788\0\uf7e1\0\uf83a\0\uf893\0\uf8ec\0\uf945\0\uf99e\0\uec68"+
    "\0\uf0ed\0\uf9f7\0\u069b\0\ufa50\0\ufaa9\0\u010b\0\ufb02\0\ufb5b"+
    "\0\ufbb4\0\ufc0d\0\ufc66\0\ufcbf\0\ufd18\0\ufd71\0\u1483\0\ufdca"+
    "\0\ufe23\0\u03d3\0\ufe7c\0\ufed5\0\uff2e\0\uff87\0\uffe0\1\71"+
    "\1\222\0\u1e98\1\353\1\u0144\1\u019d\1\u01f6\1\u024f\1\u02a8"+
    "\1\u0301\1\u035a\1\u03b3\0\u069b\1\u040c\1\u0465\0\u069b\1\u04be"+
    "\0\u069b\1\u0517\1\u0570\0\u069b\1\u05c9\1\u0622\0\u010b\0\u1483"+
    "\1\u067b\1\u06d4\1\u072d\0\u1483\1\u0786\1\u07df\1\u0838\1\u0891"+
    "\0\u03d3\1\u08ea\0\u3a0f\1\u0943\1\u099c\1\u09f5\1\u0a4e\0\u1e98"+
    "\1\u01f6\1\u0aa7\1\u01f6\1\u0b00\1\u0b59\1\u0bb2\1\u0b59\1\u0c0b"+
    "\1\u0c64\1\u0cbd\1\u0d16\1\u0d6f\0\u069b\1\u0dc8\1\u0e21\1\u0e7a"+
    "\0\u010b\1\u0ed3\1\u0f2c\0\u1483\1\u0f85\1\u0fde\1\u1037\0\u03d3"+
    "\1\u1090\1\u10e9\1\u1142\0\u3a0f\0\u1e98\1\u119b\1\u11f4\1\u124d"+
    "\1\u12a6\1\u12ff\1\u1358\1\u13b1\1\u140a\0\u069b\1\u1463\1\u14bc"+
    "\1\u1515\1\u156e\0\u1483\1\u15c7\1\u1620\1\u1679\0\u3a0f\1\u16d2"+
    "\1\u172b\0\u010b\1\u1784\1\u17dd\0\u03d3\1\u1836\1\u188f\0\u069b"+
    "\1\u18e8\1\u1941\1\u199a\1\u19f3\1\u1a4c\1\u1aa5\0\u069b\1\u1afe"+
    "\0\u1483\0\u1483\0\u03d3\1\u1b57\0\u1e98\1\u1bb0\1\u1c09\1\u1c62"+
    "\1\u1cbb\1\u1d14\1\u1d6d\1\u1dc6\1\u1e1f\1\u1e78\1\u1ed1\1\u1f2a"+
    "\0\uf0ed\1\u1f83\1\u1fdc\1\u2035\1\u208e\0\u3a0f\1\u20e7\1\u2140"+
    "\1\u2199\1\u21f2\1\u224b\1\u22a4\1\u22fd\1\u2356\1\u23af\1\u02a8"+
    "\1\u2408\1\u2461\1\u24ba\1\u2513\1\u256c\0\uf0ed\1\u25c5\1\u261e"+
    "\1\u2677\1\u26d0\1\u2729\1\u2782\1\u27db\1\u2834\1\u0b59\1\u288d"+
    "\1\u28e6\1\u293f\1\u2998\1\u02a8\1\u29f1\1\u2a4a\1\u2aa3\1\u2afc"+
    "\1\u2b55\1\u2bae\1\u2c07\1\u2c60\1\u2cb9\1\u2d12\1\u2d6b\1\u0b59"+
    "\1\u2dc4\1\u2e1d\1\u2e76\1\u2ecf\1\u2f28\1\u2f81\1\u2fda\1\u3033"+
    "\1\u308c\1\u30e5\0\uf0ed\1\u313e\1\u3197\1\u31f0\1\u3249\1\u32a2"+
    "\1\u32fb\1\u3354\1\u33ad\1\u02a8\1\u3406\1\u345f\0\u069b\1\u34b8"+
    "\1\u3511\0\uf0ed\0\u1483\1\u356a\1\u0b59\1\u35c3\1\u361c\1\u3675"+
    "\1\u36ce\1\u02a8\0\uf0ed\1\u3727\1\u3780\1\u37d9\1\u0b59\1\u02a8"+
    "\1\u3832\1\u388b\1\u0b59\1\u38e4\1\u393d\0\uf0ed\1\u3996\1\u02a8"+
    "\1\u0b59";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1089];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\2\5\1\4\1\5\1\6\1\5\1\7\1\10"+
    "\3\4\1\11\1\12\1\13\1\14\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\2\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\2\34\1\40\1\41\2\34\1\42\1\34\1\43\1\44"+
    "\1\45\1\46\1\34\1\47\2\34\1\50\2\34\1\51"+
    "\1\52\1\4\1\53\1\54\1\55\1\56\1\34\1\57"+
    "\1\60\1\61\1\62\4\34\1\63\1\64\2\34\1\65"+
    "\1\66\1\67\2\34\1\70\3\34\1\71\1\72\1\73"+
    "\2\4\131\74\1\75\2\76\1\75\1\76\1\77\1\76"+
    "\1\100\1\101\3\75\1\102\1\103\1\104\1\105\1\106"+
    "\1\107\1\110\1\111\1\112\1\113\1\114\2\115\1\116"+
    "\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126"+
    "\1\127\1\130\2\125\1\131\1\132\2\125\1\133\1\125"+
    "\1\134\1\135\1\136\1\137\1\125\1\140\2\125\1\141"+
    "\2\125\1\142\1\143\1\75\1\125\1\144\1\145\1\146"+
    "\1\125\1\147\1\150\1\125\1\151\11\125\1\152\1\153"+
    "\6\125\1\154\1\155\1\156\2\75\25\157\1\0\5\157"+
    "\1\160\1\157\1\0\75\157\1\5\22\157\1\0\5\157"+
    "\1\160\1\157\1\0\102\157\1\161\15\157\1\0\5\157"+
    "\1\160\1\162\1\0\73\157\10\163\1\164\1\165\1\166"+
    "\10\163\1\167\1\170\1\171\1\172\2\173\2\163\1\174"+
    "\1\163\1\171\1\163\1\175\1\166\1\176\3\166\1\177"+
    "\10\166\1\200\4\166\1\201\3\166\2\163\1\166\1\202"+
    "\1\203\1\204\2\167\1\205\1\206\1\207\1\167\1\210"+
    "\1\167\1\211\1\212\1\213\1\214\1\215\1\167\1\216"+
    "\1\217\1\220\2\167\1\221\1\167\1\222\1\167\4\163"+
    "\1\170\14\157\1\223\10\157\1\0\5\157\1\160\1\157"+
    "\1\0\73\157\2\224\4\157\4\224\1\225\10\224\1\225"+
    "\1\224\1\226\1\224\2\225\2\224\1\227\1\224\1\226"+
    "\1\224\30\225\2\224\33\225\5\224\24\157\1\230\1\0"+
    "\1\231\2\232\2\157\1\160\1\157\1\0\120\157\1\0"+
    "\1\233\2\234\2\157\1\160\1\157\1\0\73\157\131\0"+
    "\24\157\1\233\1\0\3\235\2\157\1\160\1\157\1\0"+
    "\53\157\1\236\43\157\1\233\1\0\1\237\2\240\2\157"+
    "\1\160\1\157\1\0\53\157\1\236\17\157\7\0\1\241"+
    "\24\0\1\242\74\0\25\157\1\0\5\157\1\160\1\243"+
    "\1\0\73\157\34\0\1\244\74\0\25\157\1\0\5\157"+
    "\1\160\1\157\1\0\42\157\1\245\55\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\13\34\1\246\5\34"+
    "\1\247\6\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\1\250"+
    "\27\34\2\157\1\251\32\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\4\34\1\252\23\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\13\34\1\253\1\34\1\254\10\34\1\255\1\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\23\34\1\256\4\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\5\34"+
    "\1\257\7\34\1\260\12\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\4\34\1\261"+
    "\23\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\23\34\1\262\4\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\15\34\1\263\12\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\20\34\1\264\7\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\4\34\1\265\23\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\7\34"+
    "\1\266\20\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\7\34\1\267\20\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\14\34\1\270\16\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\1\34\1\271\15\34\1\272\13\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\1\251"+
    "\7\34\1\273\3\34\1\274\2\34\1\275\13\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\5\34\1\276\25\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\1\34\1\277"+
    "\15\34\1\300\13\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\5\34\1\301\25\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\5\34\1\302\14\34\1\303\10\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\4\34\1\304\11\34\1\305\14\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\1\34\1\306\31\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\16\34\1\307\14\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\17\34\1\310\13\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\22\34"+
    "\1\311\1\34\1\312\6\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\5\34\1\313"+
    "\14\34\1\314\6\34\1\315\1\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\11\34"+
    "\1\316\21\34\32\157\1\0\5\157\1\160\1\157\1\0"+
    "\67\157\1\317\3\157\2\0\1\76\135\0\1\320\24\0"+
    "\1\321\74\0\10\322\1\323\120\322\14\0\1\324\114\0"+
    "\2\226\4\0\4\226\1\325\10\226\1\325\3\226\2\325"+
    "\6\226\30\325\2\226\33\325\5\226\24\0\1\326\1\0"+
    "\1\327\2\330\126\0\1\331\2\332\124\0\1\331\130\0"+
    "\1\331\1\0\1\333\2\115\134\0\1\334\174\0\1\335"+
    "\56\0\3\125\6\0\13\125\1\336\5\125\1\337\6\125"+
    "\2\0\33\125\33\0\3\125\6\0\30\125\2\0\33\125"+
    "\33\0\3\125\6\0\1\340\27\125\2\0\1\341\32\125"+
    "\33\0\3\125\6\0\4\125\1\342\23\125\2\0\33\125"+
    "\33\0\3\125\6\0\13\125\1\343\1\125\1\344\10\125"+
    "\1\345\1\125\2\0\33\125\33\0\3\125\6\0\23\125"+
    "\1\346\4\125\2\0\33\125\33\0\3\125\6\0\5\125"+
    "\1\347\7\125\1\350\12\125\2\0\33\125\33\0\3\125"+
    "\6\0\4\125\1\351\23\125\2\0\33\125\33\0\3\125"+
    "\6\0\23\125\1\352\4\125\2\0\33\125\33\0\3\125"+
    "\6\0\15\125\1\353\12\125\2\0\33\125\33\0\3\125"+
    "\6\0\20\125\1\354\7\125\2\0\33\125\33\0\3\125"+
    "\6\0\4\125\1\355\23\125\2\0\33\125\33\0\3\125"+
    "\6\0\7\125\1\356\20\125\2\0\33\125\33\0\3\125"+
    "\6\0\7\125\1\357\20\125\2\0\33\125\33\0\3\125"+
    "\6\0\30\125\2\0\17\125\1\360\13\125\33\0\3\125"+
    "\6\0\30\125\2\0\1\341\7\125\1\361\22\125\33\0"+
    "\3\125\6\0\30\125\2\0\5\125\1\362\25\125\33\0"+
    "\3\125\6\0\30\125\2\0\1\125\1\363\31\125\33\0"+
    "\3\125\6\0\30\125\2\0\5\125\1\364\25\125\33\0"+
    "\3\125\6\0\30\125\2\0\16\125\1\365\14\125\33\0"+
    "\3\125\6\0\30\125\2\0\24\125\1\366\6\125\33\0"+
    "\3\125\6\0\30\125\2\0\22\125\1\367\10\125\132\0"+
    "\1\370\30\0\1\371\103\0\2\161\1\157\22\161\1\320"+
    "\5\161\1\372\1\161\1\320\73\161\10\163\1\164\14\163"+
    "\1\171\5\163\1\174\1\163\1\171\103\163\1\164\14\163"+
    "\1\171\3\373\2\163\1\174\1\163\1\171\1\163\6\373"+
    "\25\163\6\373\41\163\1\374\1\163\1\166\10\163\1\166"+
    "\1\163\1\171\1\163\2\166\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\33\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\32\167\4\163"+
    "\1\170\10\163\1\164\12\163\1\170\1\375\1\171\3\170"+
    "\2\163\1\174\1\163\1\171\34\163\32\170\4\163\1\170"+
    "\10\171\1\376\120\171\10\163\1\164\2\163\1\377\7\163"+
    "\1\170\1\375\1\171\3\u0100\2\163\1\174\1\163\1\171"+
    "\34\163\32\170\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\1\377\7\163\1\167\1\375\1\171\1\u0100\2\u0101\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\32\167"+
    "\4\163\1\170\10\171\1\376\14\171\1\u0102\103\171\10\163"+
    "\1\374\1\163\1\166\10\163\1\166\1\163\1\171\1\163"+
    "\2\166\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\22\166\1\u0103\10\166\15\163\1\374\1\163\1\166\10\163"+
    "\1\166\1\163\1\171\1\163\2\166\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\17\166\1\u0104\13\166\15\163"+
    "\1\374\1\163\1\166\10\163\1\166\1\163\1\171\1\163"+
    "\2\166\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\5\166\1\u0105\25\166\15\163\1\374\1\163\1\166\10\163"+
    "\1\166\1\163\1\171\1\163\2\166\2\163\1\174\1\163"+
    "\1\171\1\163\20\166\1\u0106\7\166\2\163\33\166\15\163"+
    "\1\374\1\163\1\166\10\163\1\166\1\163\1\171\1\163"+
    "\2\166\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\5\166\1\u0107\25\166\15\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\20\167\1\u0108\11\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\13\167\1\u0109\16\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\4\167\1\u010a\2\167\1\u010b\22\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\24\167\1\u010c\5\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\21\167\1\u010d\10\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\23\167\1\u010e\6\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\24\167\1\u010f\5\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\4\167\1\u0110\3\167\1\u0111\21\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\1\u0112\31\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\1\u0113"+
    "\23\167\1\u0114\5\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\13\167"+
    "\1\u0115\16\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\24\167\1\u0116"+
    "\5\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\1\u0117\3\167\1\u0118"+
    "\3\167\1\u0119\21\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\1\u011a"+
    "\7\167\1\u011b\21\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\4\167"+
    "\1\u011c\25\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\7\167\1\u011d"+
    "\22\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\4\167\1\u011e\25\167"+
    "\4\163\1\170\15\157\1\u011f\7\157\1\0\5\157\1\160"+
    "\1\157\1\0\105\157\1\u0120\2\157\1\u011f\5\157\1\u0120"+
    "\1\157\1\0\1\157\2\u0120\2\157\1\160\1\157\1\0"+
    "\1\157\30\u0120\2\157\33\u0120\5\157\15\0\1\u0121\130\0"+
    "\1\u0121\7\0\1\371\103\0\25\157\1\0\1\230\2\u0122"+
    "\2\157\1\160\1\157\1\0\117\157\1\230\1\0\5\157"+
    "\1\160\1\157\1\0\117\157\1\230\1\0\1\u0123\2\232"+
    "\2\157\1\160\1\157\1\0\120\157\1\0\1\234\2\u0124"+
    "\2\157\1\160\1\157\1\0\120\157\1\0\3\u0125\2\157"+
    "\1\160\1\157\1\0\53\157\1\236\44\157\1\0\5\157"+
    "\1\160\1\157\1\0\63\157\1\u0126\33\157\1\233\1\0"+
    "\1\u0125\2\u0127\2\157\1\160\1\157\1\0\53\157\1\236"+
    "\43\157\1\233\1\0\1\u0128\2\u0127\2\157\1\160\1\157"+
    "\1\0\53\157\1\236\17\157\23\0\1\u0129\105\0\25\157"+
    "\1\0\5\157\1\160\1\157\1\0\47\157\1\u012a\50\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\4\34"+
    "\1\u012b\23\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\2\34\1\u012c\25\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\20\34\1\u012d\7\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\1\34\1\u012e"+
    "\1\34\1\u012f\2\34\1\u0130\1\u0131\1\u0132\2\34\1\u0133"+
    "\2\34\1\u0134\1\u0135\1\34\1\u0136\1\u0137\5\34\2\157"+
    "\2\34\1\u012e\1\34\1\u012f\2\34\1\u0130\1\u0131\1\u0132"+
    "\2\34\1\u0133\2\34\1\u0134\1\u0135\2\34\1\u0136\1\u0137"+
    "\6\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\21\34\1\u0138\6\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\21\34\1\u0139"+
    "\6\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\3\34\1\u013a\24\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\10\34\1\u013b\17\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\15\34\1\u013c\12\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\10\34\1\u013d\10\34\1\u013e\6\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\22\34\1\u013f\5\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\14\34\1\u0140"+
    "\13\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\1\u0141\32\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\16\34"+
    "\1\u0142\11\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\3\34\1\u0143\13\34\1\u0144"+
    "\4\34\1\u0145\3\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\4\34\1\u0146\23\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\10\34\1\u0147\17\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\24\34\1\u0148\6\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\3\34\1\u0149"+
    "\27\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\17\34\1\u014a\13\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\1\34\1\u014b\31\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\1\34\1\u014c\31\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\14\34\1\u014d\16\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\3\34"+
    "\1\u014e\27\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\14\34\1\u014f\16\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\16\34\1\u0150\14\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\24\34\1\u0151"+
    "\6\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\11\34\1\u0152\21\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\5\34\1\u0153\25\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\24\34\1\u0154\6\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\15\34\1\u0155\15\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\3\34"+
    "\1\u0156\27\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\27\34\1\u0157\3\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\3\34\1\u0158\27\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\22\34\1\u0159"+
    "\10\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\30\34\1\u015a\2\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\25\34\1\u015b\5\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\20\34\1\u015c\12\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\4\34\1\u015d\26\34\5\157\2\320\1\0"+
    "\126\320\12\0\1\u015e\2\0\1\u0121\5\0\1\u015e\3\0"+
    "\2\u015e\6\0\30\u015e\2\0\33\u015e\33\0\1\326\2\u015f"+
    "\124\0\1\326\130\0\1\326\1\0\1\u0160\2\330\126\0"+
    "\1\332\2\u0161\124\0\1\331\1\0\1\u0162\2\115\205\0"+
    "\1\u0163\51\0\3\125\6\0\4\125\1\u0164\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\2\125\1\u0165\25\125\2\0"+
    "\33\125\33\0\3\125\6\0\20\125\1\u0166\7\125\2\0"+
    "\33\125\33\0\3\125\6\0\21\125\1\u0167\6\125\2\0"+
    "\23\125\1\u0167\7\125\33\0\3\125\6\0\21\125\1\u0168"+
    "\6\125\2\0\33\125\33\0\3\125\6\0\21\125\1\u0169"+
    "\6\125\2\0\33\125\33\0\3\125\6\0\3\125\1\u016a"+
    "\24\125\2\0\33\125\33\0\3\125\6\0\10\125\1\u016b"+
    "\17\125\2\0\33\125\33\0\3\125\6\0\15\125\1\u016c"+
    "\12\125\2\0\33\125\33\0\3\125\6\0\10\125\1\u016d"+
    "\10\125\1\u016e\6\125\2\0\33\125\33\0\3\125\6\0"+
    "\22\125\1\u016f\5\125\2\0\33\125\33\0\3\125\6\0"+
    "\14\125\1\u0170\13\125\2\0\33\125\33\0\3\125\6\0"+
    "\30\125\2\0\1\u0171\32\125\33\0\3\125\6\0\16\125"+
    "\1\u0172\11\125\2\0\33\125\33\0\3\125\6\0\3\125"+
    "\1\u0173\13\125\1\u0174\4\125\1\u0175\3\125\2\0\33\125"+
    "\33\0\3\125\6\0\4\125\1\u0176\23\125\2\0\33\125"+
    "\33\0\3\125\6\0\10\125\1\u0177\17\125\2\0\33\125"+
    "\33\0\3\125\6\0\30\125\2\0\17\125\1\u0178\13\125"+
    "\33\0\3\125\6\0\30\125\2\0\1\125\1\u0179\31\125"+
    "\33\0\3\125\6\0\30\125\2\0\3\125\1\u017a\27\125"+
    "\33\0\3\125\6\0\30\125\2\0\14\125\1\u017b\16\125"+
    "\33\0\3\125\6\0\30\125\2\0\24\125\1\u017c\6\125"+
    "\33\0\3\125\6\0\30\125\2\0\24\125\1\u017d\6\125"+
    "\33\0\3\125\6\0\30\125\2\0\22\125\1\u017e\10\125"+
    "\33\0\3\125\6\0\30\125\2\0\25\125\1\u017f\5\125"+
    "\46\0\1\u0180\32\0\1\u0180\34\0\2\320\1\0\22\320"+
    "\1\u0181\103\320\10\163\1\164\14\163\1\171\3\u0182\2\163"+
    "\1\174\1\163\1\171\1\163\6\u0182\25\163\6\u0182\41\163"+
    "\1\164\12\163\1\170\1\u0183\1\171\3\170\2\163\1\174"+
    "\1\163\1\171\34\163\32\u0183\4\163\1\170\10\163\1\u0184"+
    "\14\163\1\171\5\163\1\174\1\163\1\171\103\163\1\164"+
    "\2\163\1\377\7\163\1\170\1\375\1\171\3\u0185\2\163"+
    "\1\174\1\163\1\171\34\163\32\170\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\1\377\7\163\1\167\1\375\1\171"+
    "\1\u0185\2\u0186\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\32\167\4\163\1\170\10\171\1\376\30\171"+
    "\1\u0187\32\171\1\u0187\34\171\10\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\11\166\1\u0188\21\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\25\166\1\u0189\5\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\16\166\1\u018a\14\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\16\166"+
    "\1\u018b\11\166\2\163\33\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\22\166\1\u018c\10\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\24\167\1\u018d\5\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\1\u018e\23\167\1\u018f\5\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\15\167\1\u0190\14\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\4\167\1\u0191\25\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\2\167"+
    "\1\u0192\27\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\1\u0193\3\167"+
    "\1\u0194\25\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\23\167\1\u0195"+
    "\6\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\22\167\1\u0196\7\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\5\167\1\u0197\24\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\14\167\1\u018f\15\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\21\167\1\u0198\10\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\25\167\1\u0193\4\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\14\167\1\u0199\15\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\10\167"+
    "\1\u019a\21\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\21\167\1\u019b"+
    "\10\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\3\167\1\u019c\26\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\3\167\1\u019d\26\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\6\167\1\u019e\23\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\15\167\1\u019f\14\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\13\167\1\u01a0\16\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\1\u01a1\26\167\1\u01a2\2\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\10\167\1\u01a3\21\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\13\167"+
    "\1\u01a4\16\167\4\163\1\170\12\157\1\u0120\2\157\1\u01a5"+
    "\5\157\1\u0120\1\157\1\0\1\157\2\u0120\2\157\1\160"+
    "\1\157\1\0\1\157\30\u0120\2\157\33\u0120\32\157\1\0"+
    "\1\u0122\2\u01a6\2\157\1\160\1\157\1\0\117\157\1\230"+
    "\1\0\1\u01a7\2\232\2\157\1\160\1\157\1\0\120\157"+
    "\1\0\1\u0124\2\u01a8\2\157\1\160\1\157\1\0\120\157"+
    "\1\0\3\u01a9\2\157\1\160\1\157\1\0\53\157\1\236"+
    "\27\157\1\u01aa\14\157\1\0\5\157\1\160\1\157\1\0"+
    "\117\157\1\233\1\0\1\u01ab\2\u01ac\2\157\1\160\1\157"+
    "\1\0\53\157\1\236\43\157\1\233\1\0\1\u01a9\2\u01ac"+
    "\2\157\1\160\1\157\1\0\53\157\1\236\17\157\23\0"+
    "\1\u01ad\105\0\25\157\1\0\5\157\1\160\1\157\1\0"+
    "\52\157\1\u01ae\45\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\20\34\1\u01af\7\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\1\u01b0"+
    "\27\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\16\34\1\u01b1\1\34\1\u01b2\2\34"+
    "\1\u01b3\4\34\2\157\17\34\1\u01b1\2\34\1\u01b2\2\34"+
    "\1\u01b3\5\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\10\34\1\u01b4\17\34\2\157\11\34\1\u01b4"+
    "\21\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\2\34\1\u01b5\25\34\2\157\3\34\1\u01b5\27\34"+
    "\32\157\1\0\1\34\1\u01b6\1\34\2\157\1\160\1\157"+
    "\1\0\1\157\4\34\1\u01b7\23\34\2\157\5\34\1\u01b7"+
    "\25\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\14\34\1\u01b8\1\u01b9\12\34\2\157\15\34\1\u01b8"+
    "\1\u01b9\14\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\10\34\1\u01ba\17\34\2\157\11\34\1\u01ba"+
    "\21\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\17\34\1\u01bb\10\34\2\157\20\34\1\u01bb\12\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\2\34\1\u01bc\1\34\1\u01bd\12\34\1\u01be\10\34\2\157"+
    "\3\34\1\u01bc\1\34\1\u01bd\12\34\1\u01be\12\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\4\34"+
    "\1\u01bf\3\34\1\u01c0\17\34\2\157\5\34\1\u01bf\3\34"+
    "\1\u01c0\21\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\2\34\1\u01c1\25\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\4\34"+
    "\1\u01c2\23\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\22\34\1\u01c3\5\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\22\34\1\u01c4\5\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\22\34\1\u01c5"+
    "\5\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\4\34\1\u01c6\23\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\10\34\1\u01c7\6\34\1\u01c8\10\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\1\u01c9\32\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\13\34\1\u01ca\14\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\2\34\1\u01cb\25\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\10\34\1\u01cc\17\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\4\34\1\u01cd\23\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\4\34"+
    "\1\u01ce\23\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\15\34\1\u01cf\12\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\13\34\1\u01d0\14\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\13\34\1\u01d1\17\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\14\34\1\u01d2\16\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\22\34\1\u01d3\10\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\23\34"+
    "\1\u01d4\7\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\17\34\1\u01d5\3\34\1\u01d6"+
    "\7\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\11\34\1\u01d7\21\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\23\34\1\u015b\7\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\24\34\1\u01d8\6\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\4\34\1\u01d9\23\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\7\34"+
    "\1\u01da\23\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\6\34\1\u01db\24\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\5\34\1\u01dc\25\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\5\34\1\u01dd"+
    "\25\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\14\34\1\u01de\16\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\23\34\1\u01df\7\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\11\34\1\u01e0\21\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\24\34\1\u01e1\6\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\5\34"+
    "\1\u01e2\25\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\5\34\1\u01e3\25\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\24\34\1\u01e4\6\34\5\157\12\0\1\u015e\2\0"+
    "\1\u01e5\5\0\1\u015e\3\0\2\u015e\6\0\30\u015e\2\0"+
    "\33\u015e\33\0\1\u015f\2\u01e6\124\0\1\326\1\0\1\u01e7"+
    "\2\330\126\0\1\u0161\2\u01e8\126\0\3\u0162\210\0\1\u01e9"+
    "\46\0\3\125\6\0\20\125\1\u01ea\7\125\2\0\33\125"+
    "\33\0\3\125\6\0\1\u01eb\27\125\2\0\33\125\33\0"+
    "\3\125\6\0\2\125\1\u01ec\25\125\2\0\3\125\1\u01ec"+
    "\27\125\33\0\3\125\6\0\2\125\1\u01ed\25\125\2\0"+
    "\33\125\33\0\3\125\6\0\4\125\1\u01ee\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\22\125\1\u01ef\5\125\2\0"+
    "\33\125\33\0\3\125\6\0\22\125\1\u01f0\5\125\2\0"+
    "\33\125\33\0\3\125\6\0\22\125\1\u01f1\5\125\2\0"+
    "\33\125\33\0\3\125\6\0\4\125\1\u01f2\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\10\125\1\u01f3\6\125\1\u01f4"+
    "\10\125\2\0\33\125\33\0\3\125\6\0\30\125\2\0"+
    "\1\u01f5\32\125\33\0\3\125\6\0\13\125\1\u01f6\14\125"+
    "\2\0\33\125\33\0\3\125\6\0\2\125\1\u01f7\25\125"+
    "\2\0\33\125\33\0\3\125\6\0\10\125\1\u01f8\17\125"+
    "\2\0\33\125\33\0\3\125\6\0\4\125\1\u01f9\23\125"+
    "\2\0\33\125\33\0\3\125\6\0\4\125\1\u01fa\23\125"+
    "\2\0\33\125\33\0\3\125\6\0\15\125\1\u01fb\12\125"+
    "\2\0\33\125\33\0\3\125\6\0\13\125\1\u01fc\14\125"+
    "\2\0\33\125\33\0\3\125\6\0\30\125\2\0\14\125"+
    "\1\u01fd\16\125\33\0\3\125\6\0\30\125\2\0\22\125"+
    "\1\u01fe\10\125\33\0\3\125\6\0\30\125\2\0\11\125"+
    "\1\u01ff\21\125\33\0\3\125\6\0\30\125\2\0\23\125"+
    "\1\u017f\7\125\33\0\3\125\6\0\4\125\1\u0200\23\125"+
    "\2\0\33\125\33\0\3\125\6\0\30\125\2\0\5\125"+
    "\1\u0201\25\125\33\0\3\125\6\0\30\125\2\0\11\125"+
    "\1\u0202\21\125\33\0\3\125\6\0\30\125\2\0\5\125"+
    "\1\u0203\25\125\76\0\1\u0204\37\0\2\320\1\0\36\320"+
    "\1\u0205\32\320\1\u0205\34\320\10\163\1\164\14\163\1\171"+
    "\3\u0206\2\163\1\174\1\163\1\171\1\163\6\u0206\25\163"+
    "\6\u0206\41\163\1\164\12\163\1\170\1\u0207\1\171\3\170"+
    "\2\163\1\174\1\163\1\171\34\163\32\u0207\4\163\1\170"+
    "\10\163\1\164\2\163\1\377\7\163\1\170\1\375\1\171"+
    "\3\u0208\2\163\1\174\1\163\1\171\34\163\32\170\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\1\377\7\163\1\167"+
    "\1\375\1\171\1\u0208\2\u0209\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\32\167\4\163\1\170\10\171"+
    "\1\376\60\171\1\u020a\37\171\10\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\1\u020b\31\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\22\166\1\u020c\10\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\5\166\1\u020d\25\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\2\166"+
    "\1\u020e\25\166\2\163\33\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\4\166\1\u020f\26\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\1\u019d\31\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\2\167\1\u0210\27\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\4\167"+
    "\1\u019d\25\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\23\167\1\u0211"+
    "\6\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\2\167\1\u0212\27\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\7\167\1\u0213\22\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\30\167\1\u019d\1\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\4\167\1\u0214\25\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\17\167\1\u0215\12\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\23\167\1\u0216\6\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\23\167"+
    "\1\u0217\6\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\16\167\1\u0218"+
    "\13\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\1\167\1\u0219\30\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\25\167\1\u018f\4\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\17\167\1\u021a\12\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\10\167\1\u021b\21\167\4\163\1\170\10\163"+
    "\1\u021c\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\32\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\7\167\1\u0197"+
    "\22\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\22\167\1\u021d\7\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\25\167\1\u021e\4\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\13\167\1\u019d\16\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\23\167\1\u021f\6\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\23\167\1\u018f\6\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\13\167\1\u0220\16\167\4\163\1\170\25\157\1\0\1\u01a6"+
    "\2\u0221\2\157\1\160\1\157\1\0\120\157\1\0\3\u01a7"+
    "\2\157\1\160\1\157\1\0\120\157\1\0\1\u01a8\2\u0222"+
    "\2\157\1\160\1\157\1\0\120\157\1\0\3\u0223\2\157"+
    "\1\160\1\157\1\0\53\157\1\236\43\157\1\233\1\0"+
    "\1\u0223\2\u0224\2\157\1\160\1\157\1\0\53\157\1\236"+
    "\43\157\1\233\1\0\1\u0225\2\u0224\2\157\1\160\1\157"+
    "\1\0\53\157\1\236\17\157\20\u01ad\1\0\2\u01ad\1\u0226"+
    "\1\u01ad\1\0\103\u01ad\25\157\1\0\5\157\1\160\1\157"+
    "\1\0\35\157\1\u0227\62\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\22\34\1\u0228\5\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\2\34\1\u0229\25\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\3\34\1\u022a\24\34"+
    "\2\157\4\34\1\u022a\26\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\22\34\1\u022b\5\34\2\157"+
    "\24\34\1\u022b\6\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\24\34\1\u022c\3\34\2\157\26\34"+
    "\1\u022c\4\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\10\34\1\u022d\17\34\2\157\11\34\1\u022d"+
    "\21\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\1\u022e\27\34\2\157\1\34\1\u022e\31\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\6\34"+
    "\1\u022f\21\34\2\157\7\34\1\u022f\23\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\17\34\1\u0230"+
    "\10\34\2\157\20\34\1\u0230\12\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\15\34\1\u0231\12\34"+
    "\2\157\16\34\1\u0231\14\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\22\34\1\u0232\5\34\2\157"+
    "\24\34\1\u0232\6\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\20\34\1\u0233\7\34\2\157\22\34"+
    "\1\u0233\10\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\13\34\1\u0234\14\34\2\157\14\34\1\u0234"+
    "\16\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\1\u0235\27\34\2\157\1\34\1\u0235\31\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\26\34"+
    "\1\u0236\1\34\2\157\30\34\1\u0236\2\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\22\34\1\u0237"+
    "\5\34\2\157\24\34\1\u0237\6\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\10\34\1\u0238\17\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\20\34\1\u0239\7\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\14\34"+
    "\1\u023a\13\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\1\u023b\27\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\1\u023c\27\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\16\34\1\u023d\11\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\4\34\1\u023e\23\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\20\34\1\u023f"+
    "\7\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\1\u0240\27\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\20\34"+
    "\1\u0241\7\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\25\34\1\u0242\2\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\4\34\1\u0243\23\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\7\34\1\u0244\23\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\5\34\1\u0245\25\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\23\34\1\u0246\7\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\22\34"+
    "\1\u0247\10\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\15\34\1\u0248\15\34\30\157"+
    "\1\u0249\1\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\14\34\1\u024a"+
    "\16\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\10\34\1\u024b\22\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\7\34\1\u024c\23\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\11\34\1\u024d\21\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\16\34\1\u024e\14\34\30\157\1\u024f\1\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\10\34\1\u0250\22\34\5\157"+
    "\26\0\1\u01e6\2\u0251\126\0\3\u01e7\126\0\1\u01e8\2\u0252"+
    "\173\0\1\u0253\63\0\3\125\6\0\22\125\1\u0254\5\125"+
    "\2\0\33\125\33\0\3\125\6\0\2\125\1\u0255\25\125"+
    "\2\0\33\125\33\0\3\125\6\0\20\125\1\u0256\7\125"+
    "\2\0\22\125\1\u0256\10\125\33\0\3\125\6\0\10\125"+
    "\1\u0257\17\125\2\0\33\125\33\0\3\125\6\0\20\125"+
    "\1\u0258\7\125\2\0\33\125\33\0\3\125\6\0\14\125"+
    "\1\u0259\13\125\2\0\33\125\33\0\3\125\6\0\1\u025a"+
    "\27\125\2\0\33\125\33\0\3\125\6\0\1\u025b\27\125"+
    "\2\0\33\125\33\0\3\125\6\0\16\125\1\u025c\11\125"+
    "\2\0\33\125\33\0\3\125\6\0\4\125\1\u025d\23\125"+
    "\2\0\33\125\33\0\3\125\6\0\20\125\1\u025e\7\125"+
    "\2\0\33\125\33\0\3\125\6\0\1\u025f\27\125\2\0"+
    "\33\125\33\0\3\125\6\0\20\125\1\u0260\7\125\2\0"+
    "\33\125\33\0\3\125\6\0\25\125\1\u0261\2\125\2\0"+
    "\33\125\33\0\3\125\6\0\4\125\1\u0262\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\30\125\2\0\5\125\1\u0263"+
    "\25\125\33\0\3\125\6\0\30\125\2\0\15\125\1\u0264"+
    "\15\125\33\0\3\125\6\0\30\125\2\0\14\125\1\u0265"+
    "\16\125\33\0\3\125\6\0\30\125\2\0\7\125\1\u0266"+
    "\23\125\33\0\3\125\6\0\30\125\2\0\16\125\1\u0267"+
    "\14\125\45\0\1\u0268\5\0\1\u0269\6\0\1\u026a\1\u026b"+
    "\1\0\1\u026c\1\u026d\11\0\1\u0268\5\0\1\u0269\6\0"+
    "\1\u026a\1\u026b\2\0\1\u026c\1\u026d\13\0\2\320\1\0"+
    "\66\320\1\u026e\37\320\10\163\1\u021c\14\163\1\171\3\u026f"+
    "\2\163\1\174\1\163\1\171\1\163\6\u026f\25\163\6\u026f"+
    "\37\163\1\u0207\1\163\1\u0270\12\163\2\u0207\1\u0271\3\u0207"+
    "\2\163\1\174\1\163\1\171\1\163\30\u0207\2\163\33\u0207"+
    "\3\163\2\u0207\10\163\1\164\2\163\1\377\7\163\1\170"+
    "\1\375\1\171\3\170\2\163\1\174\1\163\1\171\34\163"+
    "\32\170\4\163\1\170\10\163\1\374\1\163\1\166\1\377"+
    "\7\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\32\167\4\163"+
    "\1\170\10\171\1\376\27\171\1\u0272\5\171\1\u0273\6\171"+
    "\1\u0274\1\u0275\1\171\1\u0276\1\u0277\11\171\1\u0272\5\171"+
    "\1\u0273\6\171\1\u0274\1\u0275\2\171\1\u0276\1\u0277\13\171"+
    "\10\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\14\166\1\u0278\16\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\11\166\1\u0279\21\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\26\166\1\u027a\4\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\4\166\1\u027b\23\166\2\163\33\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\1\u027c\31\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\12\167\1\u019d"+
    "\17\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\4\167\1\u027d\25\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\12\167\1\u027e\17\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\22\167\1\u027f\7\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\15\167\1\u019d\14\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\1\u0280\1\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\22\167\1\u0281\7\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\10\167\1\u0282\21\167\4\163\1\170\10\163\1\u0283"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\32\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\16\167\1\u0214\13\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\4\167\1\u0284\25\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\13\167\1\u018f\16\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\16\167\1\u021f\13\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\u0285\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\32\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\4\167\1\u0286"+
    "\25\167\4\163\1\170\10\163\1\u0287\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\32\167\4\163\1\170"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\16\167\1\u0288\13\167\4\163\1\170\25\157"+
    "\1\0\1\u0221\2\u0289\2\157\1\160\1\157\1\0\120\157"+
    "\1\0\1\u0222\4\157\1\160\1\157\1\0\120\157\1\0"+
    "\3\u0223\2\157\1\160\1\157\1\0\117\157\1\233\1\0"+
    "\1\u0225\2\u0224\2\157\1\160\1\157\1\0\117\157\1\233"+
    "\1\0\1\u0223\2\u0224\2\157\1\160\1\157\1\0\73\157"+
    "\20\u01ad\1\0\2\u01ad\1\u028a\1\u01ad\1\0\103\u01ad\25\157"+
    "\1\0\5\157\1\160\1\157\1\0\34\157\1\u028b\63\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\1\u028c\32\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\22\34\1\u028d\5\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\27\34\1\u028e\2\157\31\34\1\u028e\1\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\22\34\1\u028f"+
    "\5\34\2\157\24\34\1\u028f\6\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\2\34\1\u0290\25\34"+
    "\2\157\3\34\1\u0290\27\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\3\34\1\u0291\24\34\2\157"+
    "\4\34\1\u0291\26\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\23\34\1\u0292\4\34\2\157\25\34"+
    "\1\u0292\5\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\12\34\1\u0293\15\34\2\157\13\34\1\u0293"+
    "\17\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\10\34\1\u0294\17\34\2\157\11\34\1\u0294\21\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\10\34\1\u0295\17\34\2\157\11\34\1\u0295\21\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\4\34"+
    "\1\u0296\23\34\2\157\5\34\1\u0296\25\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\14\34\1\u0297"+
    "\13\34\2\157\15\34\1\u0297\15\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\22\34\1\u0298\5\34"+
    "\2\157\24\34\1\u0298\6\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\13\34\1\u0299\14\34\2\157"+
    "\14\34\1\u0299\16\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\13\34\1\u029a\14\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\22\34\1\u029b\5\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\17\34\1\u029c\10\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\20\34\1\u029d\7\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\13\34"+
    "\1\u029e\14\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\1\u029f\27\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\21\34\1\u02a0\6\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\4\34\1\u02a1\23\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\22\34\1\u02a2\5\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\21\34"+
    "\1\u02a3\6\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\7\34\1\u02a4\20\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\22\34\1\u02a5\10\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\1\34\1\u02a6\31\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\1\34\1\u02a7\31\34"+
    "\32\157\1\0\5\157\1\160\1\157\1\0\41\157\1\u02a8"+
    "\14\157\1\u02a9\41\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\5\34\1\u02aa\25\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\24\34\1\u02ab\6\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\5\34\1\u014b"+
    "\25\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\3\34\1\u02ac\27\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\7\34\1\u01d3\23\34\32\157\1\0\5\157\1\160\1\157"+
    "\1\0\34\157\1\u02ad\36\157\26\0\1\u0251\2\u02ae\126\0"+
    "\1\u0252\174\0\1\u02af\64\0\3\125\6\0\30\125\2\0"+
    "\1\u02b0\32\125\33\0\3\125\6\0\22\125\1\u02b1\5\125"+
    "\2\0\33\125\33\0\3\125\6\0\10\125\1\u02b2\17\125"+
    "\2\0\11\125\1\u02b2\21\125\33\0\3\125\6\0\13\125"+
    "\1\u02b3\14\125\2\0\33\125\33\0\3\125\6\0\22\125"+
    "\1\u02b4\5\125\2\0\33\125\33\0\3\125\6\0\17\125"+
    "\1\u02b5\10\125\2\0\33\125\33\0\3\125\6\0\20\125"+
    "\1\u02b6\7\125\2\0\33\125\33\0\3\125\6\0\13\125"+
    "\1\u02b7\14\125\2\0\33\125\33\0\3\125\6\0\1\u02b8"+
    "\27\125\2\0\33\125\33\0\3\125\6\0\21\125\1\u02b9"+
    "\6\125\2\0\33\125\33\0\3\125\6\0\4\125\1\u02ba"+
    "\23\125\2\0\33\125\33\0\3\125\6\0\22\125\1\u02bb"+
    "\5\125\2\0\33\125\33\0\3\125\6\0\21\125\1\u02bc"+
    "\6\125\2\0\33\125\33\0\3\125\6\0\7\125\1\u02bd"+
    "\20\125\2\0\33\125\33\0\3\125\6\0\30\125\2\0"+
    "\1\125\1\u02be\31\125\33\0\3\125\6\0\30\125\2\0"+
    "\1\125\1\u02bf\31\125\33\0\3\125\6\0\30\125\2\0"+
    "\5\125\1\u02c0\25\125\33\0\3\125\6\0\30\125\2\0"+
    "\5\125\1\u0179\25\125\33\0\3\125\6\0\30\125\2\0"+
    "\7\125\1\u01fe\23\125\67\0\1\u02c1\33\0\1\u02c1\41\0"+
    "\1\u02c2\157\0\1\u02c3\32\0\1\u02c3\54\0\1\u02c4\151\0"+
    "\1\u02c5\32\0\1\u02c5\62\0\1\u02c6\3\0\1\u02c7\26\0"+
    "\1\u02c6\3\0\1\u02c7\26\0\2\320\1\0\35\320\1\u02c8"+
    "\5\320\1\u02c9\6\320\1\u02ca\1\u02cb\1\320\1\u02cc\1\u02cd"+
    "\11\320\1\u02c8\5\320\1\u02c9\6\320\1\u02ca\1\u02cb\2\320"+
    "\1\u02cc\1\u02cd\13\320\10\163\1\164\14\163\1\171\3\u02ce"+
    "\2\163\1\174\1\163\1\171\1\163\6\u02ce\25\163\6\u02ce"+
    "\31\163\6\171\1\u0271\1\171\1\u02cf\12\171\6\u0271\6\171"+
    "\30\u0271\2\171\33\u0271\3\171\2\u0271\10\171\1\376\51\171"+
    "\1\u02d0\33\171\1\u02d0\22\171\1\376\16\171\1\u02d1\111\171"+
    "\1\376\45\171\1\u02d2\32\171\1\u02d2\27\171\1\376\24\171"+
    "\1\u02d3\103\171\1\376\45\171\1\u02d4\32\171\1\u02d4\27\171"+
    "\1\376\32\171\1\u02d5\3\171\1\u02d6\26\171\1\u02d5\3\171"+
    "\1\u02d6\26\171\10\163\1\u02d7\1\163\1\166\10\163\1\166"+
    "\1\163\1\171\1\163\2\166\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\33\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\5\166\1\u02d8\25\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\1\u0278\31\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\21\166\1\u02d9\6\166\2\163\33\166"+
    "\15\163\1\374\1\163\1\166\10\163\1\166\1\163\1\171"+
    "\1\163\2\166\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\16\166\1\u027a\14\166\15\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\21\167\1\u0217"+
    "\10\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\1\167\1\u02da\30\167"+
    "\4\163\1\170\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\10\167\1\u018d\21\167\4\163"+
    "\1\170\10\163\1\164\14\163\1\u02db\5\163\1\174\1\163"+
    "\1\171\103\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\1\u0280\1\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\32\167\4\163\1\170\10\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\5\167\1\u02dc\24\167\4\163\1\170\10\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\21\167\1\u021f\10\167\4\163\1\170\10\163\1\374\1\163"+
    "\1\166\10\163\1\167\1\375\1\171\1\170\2\167\2\163"+
    "\1\174\1\163\1\171\1\163\30\166\2\163\1\166\22\167"+
    "\1\u02dd\7\167\4\163\1\170\10\163\1\374\1\163\1\166"+
    "\10\163\1\167\1\375\1\171\1\170\2\167\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\166\21\167\1\u019d"+
    "\10\167\4\163\1\170\10\163\1\374\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\26\167\1\u019d\3\167"+
    "\4\163\1\170\25\157\1\0\1\u0289\4\157\1\160\1\157"+
    "\1\0\73\157\20\u01ad\1\0\2\u01ad\1\u028a\1\u01ad\1\0"+
    "\7\u01ad\1\u02de\73\u01ad\25\157\1\0\5\157\1\160\1\157"+
    "\1\0\47\157\1\u02df\50\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\10\34\1\u02e0\17\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\4\34\1\u02e1\23\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\16\34\1\u02e2\11\34"+
    "\2\157\17\34\1\u02e2\13\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\22\34\1\u02e3\5\34\2\157"+
    "\24\34\1\u02e3\6\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\16\34\1\u02e4\11\34\2\157\17\34"+
    "\1\u02e4\13\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\17\34\1\u02e5\10\34\2\157\20\34\1\u02e5"+
    "\12\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\2\34\1\u02e6\25\34\2\157\3\34\1\u02e6\27\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\1\u02e7\27\34\2\157\1\34\1\u02e7\31\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\4\34\1\u02e8"+
    "\23\34\2\157\5\34\1\u02e8\25\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\1\u02e9\27\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\1\u02ea\32\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\4\34\1\u02eb\23\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\3\34\1\u02ec\24\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\21\34"+
    "\1\u02ed\6\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\2\34\1\u02ee\25\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\4\34\1\u02ef\23\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\10\34\1\u02f0"+
    "\17\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\17\34\1\u02f1\13\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\30\34\2\157\16\34\1\u01d3\14\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\14\34"+
    "\1\u01d3\16\34\32\157\1\0\5\157\1\160\1\157\1\0"+
    "\34\157\1\u02f2\63\157\1\0\5\157\1\160\1\157\1\0"+
    "\44\157\1\u02f3\53\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\15\34\1\u02f4\15\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\13\34\1\u02f5\17\34\32\157\1\0\5\157\1\160"+
    "\1\157\1\0\47\157\1\u02f6\23\157\26\0\1\u02ae\207\0"+
    "\1\u02f7\51\0\3\125\6\0\10\125\1\u02f8\17\125\2\0"+
    "\33\125\33\0\3\125\6\0\4\125\1\u02f9\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\17\125\1\u02fa\10\125\2\0"+
    "\20\125\1\u02fa\12\125\33\0\3\125\6\0\1\u02fb\27\125"+
    "\2\0\33\125\33\0\3\125\6\0\30\125\2\0\1\u02fc"+
    "\32\125\33\0\3\125\6\0\4\125\1\u02fd\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\3\125\1\u02fe\24\125\2\0"+
    "\33\125\33\0\3\125\6\0\21\125\1\u02ff\6\125\2\0"+
    "\33\125\33\0\3\125\6\0\2\125\1\u0300\25\125\2\0"+
    "\33\125\33\0\3\125\6\0\4\125\1\u0301\23\125\2\0"+
    "\33\125\33\0\3\125\6\0\10\125\1\u0302\17\125\2\0"+
    "\33\125\33\0\3\125\6\0\30\125\2\0\16\125\1\u01fe"+
    "\14\125\33\0\3\125\6\0\30\125\2\0\14\125\1\u01fe"+
    "\16\125\33\0\3\125\6\0\30\125\2\0\15\125\1\u0303"+
    "\15\125\66\0\1\u0304\33\0\1\u0304\50\0\1\u0305\154\0"+
    "\1\u0306\33\0\1\u0306\52\0\1\u0307\32\0\1\u0307\123\0"+
    "\1\u0308\33\0\1\u0308\70\0\1\u0309\33\0\1\u0309\13\0"+
    "\2\320\1\0\57\320\1\u030a\33\320\1\u030a\14\320\1\0"+
    "\24\320\1\u030b\103\320\1\0\53\320\1\u030c\32\320\1\u030c"+
    "\21\320\1\0\32\320\1\u030d\75\320\1\0\53\320\1\u030e"+
    "\32\320\1\u030e\21\320\1\0\40\320\1\u030f\3\320\1\u0310"+
    "\26\320\1\u030f\3\320\1\u0310\26\320\10\163\1\164\14\163"+
    "\1\171\3\u0311\2\163\1\174\1\163\1\171\1\163\6\u0311"+
    "\25\163\6\u0311\31\163\10\171\1\376\50\171\1\u0312\33\171"+
    "\1\u0312\23\171\1\376\24\171\1\u0313\103\171\1\376\50\171"+
    "\1\u0314\33\171\1\u0314\23\171\1\376\26\171\1\u0315\32\171"+
    "\1\u0315\46\171\1\376\54\171\1\u0316\33\171\1\u0316\17\171"+
    "\1\376\50\171\1\u0317\33\171\1\u0317\13\171\10\163\1\374"+
    "\1\163\1\166\10\163\1\166\1\163\1\171\1\163\2\166"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\22\166"+
    "\1\u0278\10\166\15\163\1\374\1\163\1\166\10\163\1\166"+
    "\1\163\1\171\1\163\2\166\2\163\1\174\1\163\1\171"+
    "\1\163\21\166\1\u0318\6\166\2\163\33\166\15\163\1\374"+
    "\1\163\1\166\10\163\1\167\1\375\1\171\1\170\2\167"+
    "\2\163\1\174\1\163\1\171\1\163\30\166\2\163\1\166"+
    "\16\167\1\u0319\13\167\4\163\1\170\10\171\1\376\14\171"+
    "\1\u031a\103\171\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\30\167\1\u0217\1\167\4\163"+
    "\1\170\10\163\1\374\1\163\1\166\10\163\1\167\1\375"+
    "\1\171\1\170\2\167\2\163\1\174\1\163\1\171\1\163"+
    "\30\166\2\163\1\166\4\167\1\u031b\25\167\4\163\1\170"+
    "\25\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\15\34\1\u031c\12\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\20\34\1\u031d\7\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\15\34\1\u031e\12\34\2\157\16\34\1\u031e"+
    "\14\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\15\34\1\u031f\12\34\2\157\16\34\1\u031f\14\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\22\34\1\u0320\5\34\2\157\24\34\1\u0320\6\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\22\34"+
    "\1\u0321\5\34\2\157\24\34\1\u0321\6\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\20\34\1\u0322"+
    "\7\34\2\157\22\34\1\u0322\10\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\20\34\1\u0323\7\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\15\34\1\u0324\12\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\1\u0325"+
    "\27\34\2\157\33\34\32\157\1\0\3\34\2\157\1\160"+
    "\1\157\1\0\1\157\30\34\2\157\1\u0326\32\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\22\34"+
    "\1\u0327\5\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\13\34\1\u0328\14\34\2\157"+
    "\33\34\32\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\25\34\1\u0329\5\34\32\157\1\0"+
    "\5\157\1\160\1\157\1\0\50\157\1\u032a\47\157\1\0"+
    "\5\157\1\160\1\157\1\0\65\157\1\u032b\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\5\34\1\u032c\25\34\32\157\1\0\5\157\1\160\1\157"+
    "\1\0\44\157\1\u032d\26\157\26\0\3\125\6\0\15\125"+
    "\1\u032e\12\125\2\0\33\125\33\0\3\125\6\0\20\125"+
    "\1\u032f\7\125\2\0\33\125\33\0\3\125\6\0\22\125"+
    "\1\u0330\5\125\2\0\24\125\1\u0330\6\125\33\0\3\125"+
    "\6\0\20\125\1\u0331\7\125\2\0\33\125\33\0\3\125"+
    "\6\0\15\125\1\u0332\12\125\2\0\33\125\33\0\3\125"+
    "\6\0\1\u0333\27\125\2\0\33\125\33\0\3\125\6\0"+
    "\30\125\2\0\1\u0334\32\125\33\0\3\125\6\0\22\125"+
    "\1\u0335\5\125\2\0\33\125\33\0\3\125\6\0\13\125"+
    "\1\u0336\14\125\2\0\33\125\33\0\3\125\6\0\30\125"+
    "\2\0\5\125\1\u0337\25\125\66\0\1\u0338\33\0\1\u0338"+
    "\62\0\1\u0338\32\0\1\u0338\101\0\1\u0339\32\0\1\u0339"+
    "\103\0\1\u033a\33\0\1\u033a\65\0\1\u033b\32\0\1\u033b"+
    "\23\0\2\320\1\0\56\320\1\u033c\33\320\1\u033c\15\320"+
    "\1\0\32\320\1\u033d\75\320\1\0\56\320\1\u033e\33\320"+
    "\1\u033e\15\320\1\0\34\320\1\u033f\32\320\1\u033f\40\320"+
    "\1\0\62\320\1\u0340\33\320\1\u0340\11\320\1\0\56\320"+
    "\1\u0341\33\320\1\u0341\13\320\10\163\1\u021c\14\163\1\171"+
    "\5\163\1\174\1\163\1\171\73\163\10\171\1\376\50\171"+
    "\1\u0342\33\171\1\u0342\23\171\1\376\36\171\1\u0342\32\171"+
    "\1\u0342\36\171\1\376\42\171\1\u0343\32\171\1\u0343\32\171"+
    "\1\376\50\171\1\u0344\33\171\1\u0344\23\171\1\376\41\171"+
    "\1\u0345\32\171\1\u0345\23\171\10\163\1\374\1\163\1\166"+
    "\10\163\1\166\1\163\1\171\1\163\2\166\2\163\1\174"+
    "\1\163\1\171\1\163\30\166\2\163\1\u0346\32\166\15\163"+
    "\1\374\1\163\1\166\10\163\1\167\1\375\1\171\1\170"+
    "\2\167\2\163\1\174\1\163\1\171\1\163\30\166\2\163"+
    "\1\166\27\167\1\u021f\2\167\4\163\1\170\10\171\1\376"+
    "\12\171\2\u0347\1\171\3\u0347\41\171\32\u0347\4\171\1\u0347"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\21\167\1\u0348\10\167\4\163\1\170\25\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\5\34"+
    "\1\u0349\22\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\1\u034a\32\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\10\34\1\u034b\17\34\2\157\11\34\1\u034b\21\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\4\34"+
    "\1\u034c\23\34\2\157\5\34\1\u034c\25\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\30\34\2\157"+
    "\1\u034d\32\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\23\34\1\u034e\4\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\22\34"+
    "\1\u034f\5\34\2\157\33\34\5\157\2\u0350\1\157\13\u0350"+
    "\2\157\5\u0350\1\u0351\5\u0350\1\u0352\1\u0350\1\u0351\73\u0350"+
    "\25\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\4\34\1\u0353\23\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\30\34\2\157\16\34"+
    "\1\u0354\14\34\32\157\1\0\5\157\1\160\1\157\1\0"+
    "\44\157\1\u0355\53\157\1\0\5\157\1\160\1\157\1\0"+
    "\40\157\1\u0356\57\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\30\34\2\157\16\34\1\u0357\14\34\32\157"+
    "\1\0\5\157\1\160\1\157\1\0\42\157\1\u0358\30\157"+
    "\26\0\3\125\6\0\5\125\1\u0359\22\125\2\0\33\125"+
    "\33\0\3\125\6\0\30\125\2\0\1\u035a\32\125\33\0"+
    "\3\125\6\0\10\125\1\u035b\17\125\2\0\11\125\1\u035b"+
    "\21\125\33\0\3\125\6\0\30\125\2\0\1\u035c\32\125"+
    "\33\0\3\125\6\0\23\125\1\u035d\4\125\2\0\33\125"+
    "\33\0\3\125\6\0\22\125\1\u035e\5\125\2\0\33\125"+
    "\5\0\2\u0351\1\0\13\u0351\2\0\111\u0351\26\0\3\125"+
    "\6\0\4\125\1\u035f\23\125\2\0\33\125\33\0\3\125"+
    "\6\0\30\125\2\0\16\125\1\u0360\14\125\62\0\1\u0361"+
    "\32\0\1\u0361\55\0\1\u0362\132\0\1\u0363\32\0\1\u0363"+
    "\101\0\1\u0364\32\0\1\u0364\32\0\2\320\1\0\56\320"+
    "\1\u0365\33\320\1\u0365\15\320\1\0\44\320\1\u0365\32\320"+
    "\1\u0365\30\320\1\0\50\320\1\u0366\32\320\1\u0366\24\320"+
    "\1\0\56\320\1\u0367\33\320\1\u0367\15\320\1\0\47\320"+
    "\1\u0368\32\320\1\u0368\23\320\10\171\1\376\44\171\1\u0369"+
    "\32\171\1\u0369\30\171\1\376\24\171\1\u036a\103\171\1\376"+
    "\26\171\1\u036b\32\171\1\u036b\46\171\1\376\32\171\1\u036c"+
    "\32\171\1\u036c\32\171\2\u036d\1\163\5\u036d\1\u036e\1\u036d"+
    "\1\u036f\3\u036d\2\163\3\u036d\1\u036f\1\u036d\1\u0370\1\u036d"+
    "\2\u036f\2\163\1\u0371\1\u036d\1\u0370\1\u036d\30\u036f\2\u036d"+
    "\33\u036f\1\163\1\u036d\1\163\2\u036d\10\171\1\376\12\171"+
    "\1\u0347\1\u0372\1\171\3\u0347\41\171\32\u0347\4\171\1\u0347"+
    "\10\163\1\374\1\163\1\166\10\163\1\167\1\375\1\171"+
    "\1\170\2\167\2\163\1\174\1\163\1\171\1\163\30\166"+
    "\2\163\1\166\10\167\1\u0373\21\167\4\163\1\170\25\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\16\34"+
    "\1\u0374\11\34\2\157\33\34\32\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\1\u0375\27\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\15\34\1\u0376\12\34\2\157\16\34\1\u0376\14\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\1\u0377"+
    "\27\34\2\157\1\34\1\u0377\31\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\15\34\1\u0378\12\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\14\34\1\u0379\13\34\2\157\33\34\32\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\16\34"+
    "\1\u037a\11\34\2\157\33\34\5\157\2\u0351\1\0\13\u0351"+
    "\2\0\5\u0351\1\u037b\103\u0351\25\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\30\34\2\157\4\34\1\u037c"+
    "\26\34\32\157\1\0\5\157\1\160\1\157\1\0\47\157"+
    "\1\u037d\50\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\1\34\1\u037e\26\34\2\157\33\34\32\157\1\0"+
    "\5\157\1\160\1\157\1\0\51\157\1\u037f\21\157\26\0"+
    "\3\125\6\0\16\125\1\u0380\11\125\2\0\33\125\33\0"+
    "\3\125\6\0\1\u0381\27\125\2\0\33\125\33\0\3\125"+
    "\6\0\15\125\1\u0382\12\125\2\0\16\125\1\u0382\14\125"+
    "\33\0\3\125\6\0\15\125\1\u0383\12\125\2\0\33\125"+
    "\33\0\3\125\6\0\14\125\1\u0384\13\125\2\0\33\125"+
    "\33\0\3\125\6\0\16\125\1\u0385\11\125\2\0\33\125"+
    "\33\0\3\125\6\0\1\125\1\u0386\26\125\2\0\33\125"+
    "\61\0\1\u0387\32\0\1\u0387\100\0\1\u0388\33\0\1\u0388"+
    "\52\0\1\u0389\73\0\2\320\1\0\52\320\1\u038a\32\320"+
    "\1\u038a\22\320\1\0\32\320\1\u038b\75\320\1\0\34\320"+
    "\1\u038c\32\320\1\u038c\40\320\1\0\40\320\1\u038d\32\320"+
    "\1\u038d\32\320\10\171\1\376\43\171\1\u038e\32\171\1\u038e"+
    "\31\171\1\376\46\171\1\u038f\33\171\1\u038f\25\171\1\376"+
    "\24\171\1\u0390\73\171\2\u036d\1\163\5\u036d\1\u0391\5\u036d"+
    "\1\u0392\1\163\5\u036d\1\u0370\3\u036d\2\163\1\u0371\1\u036d"+
    "\1\u0370\66\u036d\1\163\1\u036d\1\163\2\u036d\2\u0393\1\157"+
    "\13\u0393\1\u0394\1\157\5\u0393\1\u0395\3\u0393\2\157\1\u0396"+
    "\1\u0393\1\u0395\66\u0393\1\157\1\u0393\1\157\2\u0393\2\u036d"+
    "\1\163\5\u036d\1\u036e\1\u036d\1\u036f\3\u036d\1\u0392\1\163"+
    "\3\u036d\1\u036f\1\u036d\1\u0370\1\u036d\2\u036f\2\163\1\u0371"+
    "\1\u036d\1\u0370\1\u036d\30\u036f\2\u036d\33\u036f\1\163\1\u036d"+
    "\1\163\2\u036d\2\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398"+
    "\1\171\11\u0370\2\171\71\u0370\1\171\1\u0370\1\171\4\u0370"+
    "\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171\5\u0370\1\u0399"+
    "\3\u0370\2\171\71\u0370\1\171\1\u0370\1\171\2\u0370\10\171"+
    "\1\376\12\171\1\u0347\1\u039a\1\171\3\u0347\41\171\32\u039a"+
    "\4\171\1\u0347\10\163\1\374\1\163\1\166\10\163\1\167"+
    "\1\375\1\171\1\170\2\167\2\163\1\174\1\163\1\171"+
    "\1\163\30\166\2\163\1\166\5\167\1\u039b\24\167\4\163"+
    "\1\170\25\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\13\34\1\u039c\14\34\2\157\33\34\32\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\6\34\1\u039d"+
    "\21\34\2\157\7\34\1\u039d\23\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\23\34\1\u039e\4\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\20\34\1\u039f\7\34\2\157\33\34\5\157"+
    "\2\u0351\1\0\13\u0351\2\0\21\u0351\1\u03a0\32\u0351\1\u03a0"+
    "\34\u0351\25\157\1\0\5\157\1\160\1\157\1\0\64\157"+
    "\1\u03a1\33\157\1\0\3\34\2\157\1\160\1\157\1\0"+
    "\1\157\30\34\2\157\31\34\1\u03a2\1\34\5\157\26\0"+
    "\3\125\6\0\13\125\1\u03a3\14\125\2\0\33\125\33\0"+
    "\3\125\6\0\6\125\1\u03a4\21\125\2\0\7\125\1\u03a4"+
    "\23\125\33\0\3\125\6\0\23\125\1\u03a5\4\125\2\0"+
    "\33\125\33\0\3\125\6\0\20\125\1\u03a6\7\125\2\0"+
    "\33\125\33\0\3\125\6\0\30\125\2\0\31\125\1\u03a7"+
    "\1\125\42\0\1\u03a8\136\0\1\u03a9\32\0\1\u03a9\32\0"+
    "\2\320\1\0\51\320\1\u03aa\32\320\1\u03aa\23\320\1\0"+
    "\54\320\1\u03ab\33\320\1\u03ab\17\320\1\0\32\320\1\u03ac"+
    "\73\320\10\171\1\376\24\171\1\u03ad\103\171\1\376\32\171"+
    "\1\u03ae\32\171\1\u03ae\32\171\10\163\1\164\6\163\1\u03af"+
    "\5\163\1\171\5\163\1\174\1\163\1\171\73\163\17\157"+
    "\1\u03b0\5\157\1\0\5\157\1\160\1\157\1\0\73\157"+
    "\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0\71\u0395"+
    "\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0"+
    "\5\u0395\1\u03b2\3\u0395\2\0\71\u0395\1\0\1\u0395\1\0"+
    "\2\u0395\10\171\1\376\6\171\1\u03b3\111\171\2\u0370\1\171"+
    "\5\u0370\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171\6\u0370"+
    "\1\u03b4\32\u0370\1\u03b4\27\u0370\1\171\1\u0370\1\171\2\u0370"+
    "\10\171\1\376\12\171\1\u0347\1\u0271\1\171\3\u0347\41\171"+
    "\32\u0271\4\171\1\u0347\10\163\1\u02d7\1\163\1\166\10\163"+
    "\1\167\1\375\1\171\1\170\2\167\2\163\1\174\1\163"+
    "\1\171\1\163\30\166\2\163\1\166\32\167\4\163\1\170"+
    "\25\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\4\34\1\u03b5\23\34\2\157\33\34\32\157\1\0\3\34"+
    "\2\157\1\160\1\157\1\0\1\157\14\34\1\u03b6\13\34"+
    "\2\157\33\34\32\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\10\34\1\u03b7\17\34\2\157\33\34\5\157"+
    "\2\u0351\1\0\13\u0351\2\0\51\u0351\1\u03b8\37\u0351\25\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\10\34"+
    "\1\u03b9\17\34\2\157\33\34\5\157\26\0\3\125\6\0"+
    "\4\125\1\u03ba\23\125\2\0\33\125\33\0\3\125\6\0"+
    "\14\125\1\u03bb\13\125\2\0\33\125\33\0\3\125\6\0"+
    "\10\125\1\u03bc\17\125\2\0\33\125\33\0\3\125\6\0"+
    "\10\125\1\u03bd\17\125\2\0\33\125\44\0\1\u03be\32\0"+
    "\1\u03be\36\0\2\320\1\0\32\320\1\u03bf\75\320\1\0"+
    "\40\320\1\u03c0\32\320\1\u03c0\32\320\10\171\1\376\26\171"+
    "\1\u03c1\32\171\1\u03c1\36\171\10\163\1\u03c2\14\163\1\171"+
    "\5\163\1\174\1\163\1\171\73\163\10\157\1\u03c2\14\157"+
    "\1\0\5\157\1\160\1\157\1\0\73\157\17\0\1\u03c3"+
    "\111\0\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0"+
    "\6\u0395\1\u03c4\32\u0395\1\u03c4\27\u0395\1\0\1\u0395\1\0"+
    "\2\u0395\10\171\1\u03c5\120\171\2\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\36\u0370\1\u03c6\32\u0370"+
    "\1\171\1\u0370\1\171\2\u0370\25\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\1\u03c7\27\34\2\157\33\34"+
    "\32\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\16\34\1\u03c8\11\34\2\157\33\34\5\157\2\u0351\1\0"+
    "\13\u0351\2\0\20\u0351\1\u03c9\5\u0351\1\u03ca\6\u0351\1\u03cb"+
    "\1\u03cc\1\u0351\1\u03cd\1\u03ce\11\u0351\1\u03c9\5\u0351\1\u03ca"+
    "\6\u0351\1\u03cb\1\u03cc\2\u0351\1\u03cd\1\u03ce\13\u0351\25\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\30\34"+
    "\2\157\4\34\1\u03cf\26\34\5\157\26\0\3\125\6\0"+
    "\1\u03d0\27\125\2\0\33\125\33\0\3\125\6\0\16\125"+
    "\1\u03d1\11\125\2\0\33\125\33\0\3\125\6\0\30\125"+
    "\2\0\4\125\1\u03d2\26\125\42\0\1\u03d3\73\0\2\320"+
    "\1\0\34\320\1\u03d4\32\320\1\u03d4\36\320\10\171\1\376"+
    "\24\171\1\u03d5\73\171\10\0\1\u03c5\120\0\2\u0395\1\0"+
    "\13\u0395\1\u03b1\1\0\11\u0395\2\0\36\u0395\1\u03d6\32\u0395"+
    "\1\0\1\u0395\1\0\2\u0395\2\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\5\u0370\1\u03d7\5\u0370"+
    "\1\u03d8\6\u0370\1\u03d9\1\u03da\1\u0370\1\u03db\1\u03dc\11\u0370"+
    "\1\u03d7\5\u0370\1\u03d8\6\u0370\1\u03d9\1\u03da\2\u0370\1\u03db"+
    "\1\u03dc\6\u0370\1\171\1\u0370\1\171\2\u0370\25\157\1\0"+
    "\3\34\2\157\1\160\1\157\1\0\1\157\22\34\1\u03dd"+
    "\5\34\2\157\33\34\5\157\2\u0351\1\0\13\u0351\2\0"+
    "\42\u0351\1\u03de\33\u0351\1\u03de\14\u0351\1\0\13\u0351\2\0"+
    "\7\u0351\1\u03df\103\u0351\1\0\13\u0351\2\0\36\u0351\1\u03e0"+
    "\32\u0351\1\u03e0\21\u0351\1\0\13\u0351\2\0\15\u0351\1\u03e1"+
    "\75\u0351\1\0\13\u0351\2\0\36\u0351\1\u03e2\32\u0351\1\u03e2"+
    "\21\u0351\1\0\13\u0351\2\0\23\u0351\1\u03e3\3\u0351\1\u03e4"+
    "\26\u0351\1\u03e3\3\u0351\1\u03e4\26\u0351\26\0\3\125\6\0"+
    "\22\125\1\u03e5\5\125\2\0\33\125\5\0\2\320\1\0"+
    "\32\320\1\u03e6\73\320\2\u0395\1\0\13\u0395\1\u03b1\1\0"+
    "\11\u0395\2\0\5\u0395\1\u03e7\5\u0395\1\u03e8\6\u0395\1\u03e9"+
    "\1\u03ea\1\u0395\1\u03eb\1\u03ec\11\u0395\1\u03e7\5\u0395\1\u03e8"+
    "\6\u0395\1\u03e9\1\u03ea\2\u0395\1\u03eb\1\u03ec\6\u0395\1\0"+
    "\1\u0395\1\0\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370"+
    "\1\u0398\1\171\11\u0370\2\171\27\u0370\1\u03ed\33\u0370\1\u03ed"+
    "\5\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\7\u0370\1\u03ee\1\u0370\2\171\71\u0370"+
    "\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370"+
    "\1\u0398\1\171\11\u0370\2\171\23\u0370\1\u03ef\32\u0370\1\u03ef"+
    "\12\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\2\u0370\1\u03f0\66\u0370"+
    "\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370"+
    "\1\u0398\1\171\11\u0370\2\171\23\u0370\1\u03f1\32\u0370\1\u03f1"+
    "\12\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\10\u0370\1\u03f2\3\u0370"+
    "\1\u03f3\26\u0370\1\u03f2\3\u0370\1\u03f3\21\u0370\1\171\1\u0370"+
    "\1\171\2\u0370\25\157\1\0\3\34\2\157\1\160\1\157"+
    "\1\0\1\157\16\34\1\u03f4\11\34\2\157\33\34\5\157"+
    "\2\u0351\1\0\13\u0351\2\0\41\u0351\1\u03f5\33\u0351\1\u03f5"+
    "\15\u0351\1\0\13\u0351\2\0\15\u0351\1\u03f6\75\u0351\1\0"+
    "\13\u0351\2\0\41\u0351\1\u03f7\33\u0351\1\u03f7\15\u0351\1\0"+
    "\13\u0351\2\0\17\u0351\1\u03f8\32\u0351\1\u03f8\40\u0351\1\0"+
    "\13\u0351\2\0\45\u0351\1\u03f9\33\u0351\1\u03f9\11\u0351\1\0"+
    "\13\u0351\2\0\41\u0351\1\u03fa\33\u0351\1\u03fa\13\u0351\26\0"+
    "\3\125\6\0\16\125\1\u03fb\11\125\2\0\33\125\5\0"+
    "\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0\27\u0395"+
    "\1\u03fc\33\u0395\1\u03fc\5\u0395\1\0\1\u0395\1\0\4\u0395"+
    "\1\0\13\u0395\1\u03b1\1\0\7\u0395\1\u03fd\1\u0395\2\0"+
    "\71\u0395\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1"+
    "\1\0\11\u0395\2\0\23\u0395\1\u03fe\32\u0395\1\u03fe\12\u0395"+
    "\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0"+
    "\11\u0395\2\0\2\u0395\1\u03ff\66\u0395\1\0\1\u0395\1\0"+
    "\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0\23\u0395"+
    "\1\u0400\32\u0395\1\u0400\12\u0395\1\0\1\u0395\1\0\4\u0395"+
    "\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0\10\u0395\1\u0401"+
    "\3\u0395\1\u0402\26\u0395\1\u0401\3\u0395\1\u0402\21\u0395\1\0"+
    "\1\u0395\1\0\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370"+
    "\1\u0398\1\171\11\u0370\2\171\26\u0370\1\u0403\33\u0370\1\u0403"+
    "\6\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\2\u0370\1\u0404\66\u0370"+
    "\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370"+
    "\1\u0398\1\171\11\u0370\2\171\26\u0370\1\u0405\33\u0370\1\u0405"+
    "\6\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\4\u0370\1\u0406\32\u0370"+
    "\1\u0406\31\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370"+
    "\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171\32\u0370\1\u0407"+
    "\33\u0370\1\u0407\2\u0370\1\171\1\u0370\1\171\4\u0370\1\171"+
    "\5\u0370\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171\26\u0370"+
    "\1\u0408\33\u0370\1\u0408\6\u0370\1\171\1\u0370\1\171\2\u0370"+
    "\25\157\1\0\3\34\2\157\1\160\1\157\1\0\1\157"+
    "\20\34\1\u0409\7\34\2\157\33\34\5\157\2\u0351\1\0"+
    "\13\u0351\2\0\41\u0351\1\u040a\33\u0351\1\u040a\15\u0351\1\0"+
    "\13\u0351\2\0\27\u0351\1\u040a\32\u0351\1\u040a\30\u0351\1\0"+
    "\13\u0351\2\0\33\u0351\1\u040b\32\u0351\1\u040b\24\u0351\1\0"+
    "\13\u0351\2\0\41\u0351\1\u040c\33\u0351\1\u040c\15\u0351\1\0"+
    "\13\u0351\2\0\32\u0351\1\u040d\32\u0351\1\u040d\23\u0351\26\0"+
    "\3\125\6\0\20\125\1\u040e\7\125\2\0\33\125\5\0"+
    "\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0\26\u0395"+
    "\1\u040f\33\u0395\1\u040f\6\u0395\1\0\1\u0395\1\0\4\u0395"+
    "\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0\2\u0395\1\u0410"+
    "\66\u0395\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1"+
    "\1\0\11\u0395\2\0\26\u0395\1\u0411\33\u0395\1\u0411\6\u0395"+
    "\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0"+
    "\11\u0395\2\0\4\u0395\1\u0412\32\u0395\1\u0412\31\u0395\1\0"+
    "\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395"+
    "\2\0\32\u0395\1\u0413\33\u0395\1\u0413\2\u0395\1\0\1\u0395"+
    "\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0"+
    "\26\u0395\1\u0414\33\u0395\1\u0414\6\u0395\1\0\1\u0395\1\0"+
    "\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171"+
    "\11\u0370\2\171\26\u0370\1\u0415\33\u0370\1\u0415\6\u0370\1\171"+
    "\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398"+
    "\1\171\11\u0370\2\171\14\u0370\1\u0415\32\u0370\1\u0415\21\u0370"+
    "\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370"+
    "\1\u0398\1\171\11\u0370\2\171\20\u0370\1\u0416\32\u0370\1\u0416"+
    "\15\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397"+
    "\5\u0370\1\u0398\1\171\11\u0370\2\171\26\u0370\1\u0417\33\u0370"+
    "\1\u0417\6\u0370\1\171\1\u0370\1\171\4\u0370\1\171\5\u0370"+
    "\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171\17\u0370\1\u0418"+
    "\32\u0370\1\u0418\16\u0370\1\171\1\u0370\1\171\2\u0370\25\157"+
    "\1\0\3\34\2\157\1\160\1\157\1\0\1\157\10\34"+
    "\1\u0419\17\34\2\157\33\34\5\157\2\u0351\1\0\13\u0351"+
    "\2\0\35\u0351\1\u041a\32\u0351\1\u041a\22\u0351\1\0\13\u0351"+
    "\2\0\15\u0351\1\u041b\75\u0351\1\0\13\u0351\2\0\17\u0351"+
    "\1\u041c\32\u0351\1\u041c\40\u0351\1\0\13\u0351\2\0\23\u0351"+
    "\1\u041d\32\u0351\1\u041d\32\u0351\26\0\3\125\6\0\10\125"+
    "\1\u041e\17\125\2\0\33\125\5\0\2\u0395\1\0\13\u0395"+
    "\1\u03b1\1\0\11\u0395\2\0\26\u0395\1\u041f\33\u0395\1\u041f"+
    "\6\u0395\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1"+
    "\1\0\11\u0395\2\0\14\u0395\1\u041f\32\u0395\1\u041f\21\u0395"+
    "\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0"+
    "\11\u0395\2\0\20\u0395\1\u0420\32\u0395\1\u0420\15\u0395\1\0"+
    "\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395"+
    "\2\0\26\u0395\1\u0421\33\u0395\1\u0421\6\u0395\1\0\1\u0395"+
    "\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0"+
    "\17\u0395\1\u0422\32\u0395\1\u0422\16\u0395\1\0\1\u0395\1\0"+
    "\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171"+
    "\11\u0370\2\171\22\u0370\1\u0423\32\u0370\1\u0423\13\u0370\1\171"+
    "\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398"+
    "\1\171\11\u0370\2\171\2\u0370\1\u0424\66\u0370\1\171\1\u0370"+
    "\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171"+
    "\11\u0370\2\171\4\u0370\1\u0425\32\u0370\1\u0425\31\u0370\1\171"+
    "\1\u0370\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398"+
    "\1\171\11\u0370\2\171\10\u0370\1\u0426\32\u0370\1\u0426\25\u0370"+
    "\1\171\1\u0370\1\171\2\u0370\25\157\1\0\3\34\2\157"+
    "\1\160\1\157\1\0\1\157\16\34\1\u0427\11\34\2\157"+
    "\33\34\5\157\2\u0351\1\0\13\u0351\2\0\34\u0351\1\u0428"+
    "\32\u0351\1\u0428\23\u0351\1\0\13\u0351\2\0\37\u0351\1\u0429"+
    "\33\u0351\1\u0429\17\u0351\1\0\13\u0351\2\0\15\u0351\1\u042a"+
    "\73\u0351\26\0\3\125\6\0\16\125\1\u042b\11\125\2\0"+
    "\33\125\5\0\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395"+
    "\2\0\22\u0395\1\u042c\32\u0395\1\u042c\13\u0395\1\0\1\u0395"+
    "\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0"+
    "\2\u0395\1\u042d\66\u0395\1\0\1\u0395\1\0\4\u0395\1\0"+
    "\13\u0395\1\u03b1\1\0\11\u0395\2\0\4\u0395\1\u042e\32\u0395"+
    "\1\u042e\31\u0395\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395"+
    "\1\u03b1\1\0\11\u0395\2\0\10\u0395\1\u042f\32\u0395\1\u042f"+
    "\25\u0395\1\0\1\u0395\1\0\2\u0395\2\u0370\1\171\5\u0370"+
    "\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171\21\u0370\1\u0430"+
    "\32\u0370\1\u0430\14\u0370\1\171\1\u0370\1\171\4\u0370\1\171"+
    "\5\u0370\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171\24\u0370"+
    "\1\u0431\33\u0370\1\u0431\10\u0370\1\171\1\u0370\1\171\4\u0370"+
    "\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171\11\u0370\2\171"+
    "\2\u0370\1\u0432\66\u0370\1\171\1\u0370\1\171\2\u0370\2\u0351"+
    "\1\0\13\u0351\2\0\15\u0351\1\u0433\75\u0351\1\0\13\u0351"+
    "\2\0\23\u0351\1\u0434\32\u0351\1\u0434\32\u0351\2\u0395\1\0"+
    "\13\u0395\1\u03b1\1\0\11\u0395\2\0\21\u0395\1\u0435\32\u0395"+
    "\1\u0435\14\u0395\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395"+
    "\1\u03b1\1\0\11\u0395\2\0\24\u0395\1\u0436\33\u0395\1\u0436"+
    "\10\u0395\1\0\1\u0395\1\0\4\u0395\1\0\13\u0395\1\u03b1"+
    "\1\0\11\u0395\2\0\2\u0395\1\u0437\66\u0395\1\0\1\u0395"+
    "\1\0\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398"+
    "\1\171\11\u0370\2\171\2\u0370\1\u0438\66\u0370\1\171\1\u0370"+
    "\1\171\4\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171"+
    "\11\u0370\2\171\10\u0370\1\u0439\32\u0370\1\u0439\25\u0370\1\171"+
    "\1\u0370\1\171\2\u0370\2\u0351\1\0\13\u0351\2\0\17\u0351"+
    "\1\u043a\32\u0351\1\u043a\36\u0351\2\u0395\1\0\13\u0395\1\u03b1"+
    "\1\0\11\u0395\2\0\2\u0395\1\u043b\66\u0395\1\0\1\u0395"+
    "\1\0\4\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395\2\0"+
    "\10\u0395\1\u043c\32\u0395\1\u043c\25\u0395\1\0\1\u0395\1\0"+
    "\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398\1\171"+
    "\11\u0370\2\171\4\u0370\1\u043d\32\u0370\1\u043d\31\u0370\1\171"+
    "\1\u0370\1\171\2\u0370\2\u0351\1\0\13\u0351\2\0\15\u0351"+
    "\1\u043e\73\u0351\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395"+
    "\2\0\4\u0395\1\u043f\32\u0395\1\u043f\31\u0395\1\0\1\u0395"+
    "\1\0\2\u0395\2\u0370\1\171\5\u0370\1\u0397\5\u0370\1\u0398"+
    "\1\171\11\u0370\2\171\2\u0370\1\u0440\66\u0370\1\171\1\u0370"+
    "\1\171\2\u0370\2\u0395\1\0\13\u0395\1\u03b1\1\0\11\u0395"+
    "\2\0\2\u0395\1\u0441\66\u0395\1\0\1\u0395\1\0\2\u0395";

  private static int [] zzUnpackTrans() {
    int [] result = new int[80367];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\0\17\1\1\11\51\1\3\11\5\1\5\11"+
    "\2\1\1\11\2\1\2\11\22\1\2\11\10\1\1\11"+
    "\1\1\1\11\2\0\2\1\1\0\1\1\36\0\1\1"+
    "\5\0\2\1\1\0\2\1\1\0\2\1\1\0\1\11"+
    "\1\1\1\11\1\0\53\1\1\11\1\0\2\11\2\0"+
    "\2\1\1\0\2\1\1\11\1\0\32\1\1\11\1\0"+
    "\1\1\1\0\1\1\1\0\1\11\40\0\1\1\1\0"+
    "\1\11\4\1\1\0\2\1\2\0\63\1\1\0\4\1"+
    "\1\0\34\1\1\0\1\1\2\0\1\1\40\0\10\1"+
    "\2\0\66\1\1\11\3\1\1\0\32\1\1\0\1\1"+
    "\26\0\1\1\4\0\5\1\2\0\41\1\1\0\5\1"+
    "\1\0\3\1\1\0\24\1\6\0\1\1\1\0\1\1"+
    "\22\0\1\1\3\0\1\1\1\0\1\1\2\0\34\1"+
    "\2\0\3\1\1\0\1\1\1\0\21\1\3\0\1\11"+
    "\3\0\6\1\1\0\1\11\3\0\1\1\3\0\1\1"+
    "\6\0\24\1\2\0\2\1\1\0\1\11\14\1\1\0"+
    "\1\11\4\0\7\1\2\0\1\1\10\0\16\1\2\0"+
    "\1\1\1\0\12\1\4\0\6\1\7\0\14\1\1\0"+
    "\2\1\1\0\10\1\1\0\1\11\2\0\4\1\1\0"+
    "\1\1\3\0\1\1\5\0\11\1\1\0\11\1\2\0"+
    "\1\11\4\1\2\0\2\1\5\0\1\1\4\0\14\1"+
    "\1\11\1\0\4\1\7\0\11\1\1\0\2\1\1\0"+
    "\1\1\2\0\1\11\1\0\14\1\1\11\2\1\7\0"+
    "\12\1\11\0\1\1\3\0\10\1\3\0\1\1\4\0"+
    "\1\1\4\0\6\1\1\0\1\1\10\0\6\1\5\0"+
    "\1\1\2\0\5\1\1\0\1\1\4\0\3\1\2\0"+
    "\2\1\1\0\2\1\2\0\1\1\1\0\2\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1089];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
private ManejadorEstructura manejadorEtiquetas;
public void entradaManejadorEstructura(ManejadorEstructura entrada){
	//Reportes entrada
	//this.reporte = entrada;
	this.manejadorEtiquetas = entrada;
}
private Symbol symbol (int tipo){
    return new Symbol (tipo,yyline,yycolumn);
}   
private Symbol symbol (int tipo, Object value){
    return new Symbol (tipo,yyline,yycolumn,value);
}

private Symbol symbol (int tipo, Lexema lex){
    return new Symbol (tipo,yyline,yycolumn,lex);
}



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  lexico(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { //System.out.println("Detecto ENTERO_SCRIPTING: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.INTEGER_POSITIVO,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""),"INTEGER"));
            }
            // fall through
          case 123: break;
          case 2:
            { System.out.println("		Detecto otras cosas DENTRO "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		manejadorEtiquetas.agregarError("Lexico",yytext(),new int []{(yyline+1),(yycolumn+1)});
            }
            // fall through
          case 124: break;
          case 3:
            { 
            }
            // fall through
          case 125: break;
          case 4:
            { ////System.out.println("Detecto Not");
		return symbol(sym.NOT);
            }
            // fall through
          case 126: break;
          case 5:
            { System.out.println("Detecto PARENTESIS_ABIERTO");  
	return symbol(sym.PARENTESIS_ABIERTO);
            }
            // fall through
          case 127: break;
          case 6:
            { System.out.println("Detecto PARENTESIS_CERRADO");  
	return symbol(sym.PARENTESIS_CERRADO);
            }
            // fall through
          case 128: break;
          case 7:
            { //System.out.println("Detecto MULTIPLICACION en estado script");
			return symbol(sym.MULTIPLICACION);
            }
            // fall through
          case 129: break;
          case 8:
            { //System.out.println("Detecto SUMA en estado script");
			return symbol(sym.SUMA);
            }
            // fall through
          case 130: break;
          case 9:
            { ////System.out.println("Detecto COMA");  
		return symbol(sym.COMA);
            }
            // fall through
          case 131: break;
          case 10:
            { System.out.println("Detecto RESTA en estado script "+yytext());
			return symbol(sym.RESTA);
            }
            // fall through
          case 132: break;
          case 11:
            { ////System.out.println("Detecto DIAGONAL");
		return symbol(sym.DIAGONAL);
            }
            // fall through
          case 133: break;
          case 12:
            { ////System.out.println("Detecto ENTERO");  
		return symbol(sym.ENTERO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 134: break;
          case 13:
            { //System.out.println("Detecto DOS_PUNTOS en estado script");
			return symbol(sym.DOS_PUNTOS);
            }
            // fall through
          case 135: break;
          case 14:
            { //System.out.println("Detecto PUNTO_COMA en estado script");
			return symbol(sym.PUNTO_COMA);
            }
            // fall through
          case 136: break;
          case 15:
            { ////System.out.println("Detecto MENOR_QUE");
	return symbol(sym.MENOR_QUE);
            }
            // fall through
          case 137: break;
          case 16:
            { ////System.out.println("Detecto IGUAL");  
		return symbol(sym.IGUAL);
            }
            // fall through
          case 138: break;
          case 17:
            { ////System.out.println("Detecto MAYOR_QUE");  
	return symbol(sym.MAYOR_QUE);
            }
            // fall through
          case 139: break;
          case 18:
            { ////System.out.println("Detecto CHAR: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.ID_VARIABLE,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 140: break;
          case 19:
            { ////System.out.println("Detecto CORCHETE_ABIERTO");  
	return symbol(sym.CORCHETE_ABIERTO);
            }
            // fall through
          case 141: break;
          case 20:
            { ////System.out.println("Detecto CORCHETE_CERRADO");  
	return symbol(sym.CORCHETE_CERRADO);
            }
            // fall through
          case 142: break;
          case 21:
            { //System.out.println("Detecto LLAVE_ABIERTA  en estado script");
		return symbol(sym.LLAVE_ABIERTA);
            }
            // fall through
          case 143: break;
          case 22:
            { //System.out.println("Detecto LLAVE_CERRADA  en estado script");
		return symbol(sym.LLAVE_CERRADA);
            }
            // fall through
          case 144: break;
          case 23:
            { System.out.print(yytext());
            }
            // fall through
          case 145: break;
          case 24:
            { //System.out.println("Detecto PARENTESIS_ABIERTO  en estado script");
		return symbol(sym.PARENTESIS_ABIERTO);
            }
            // fall through
          case 146: break;
          case 25:
            { //System.out.println("Detecto PARENTESIS_CERRADO  en estado script");  
		return symbol(sym.PARENTESIS_CERRADO);
            }
            // fall through
          case 147: break;
          case 26:
            { //System.out.println("Detecto DIAGONAL  en estado script");
		return symbol(sym.DIAGONAL);
            }
            // fall through
          case 148: break;
          case 27:
            { ////System.out.println("Detecto MENOR_QUE");
		return symbol(sym.MENOR_QUE);
            }
            // fall through
          case 149: break;
          case 28:
            { //System.out.println("Detecto IGUAL  en estado script");  
		return symbol(sym.IGUAL);
            }
            // fall through
          case 150: break;
          case 29:
            { ////System.out.println("Detecto MAYOR_QUE");  
		return symbol(sym.MAYOR_QUE);
            }
            // fall through
          case 151: break;
          case 30:
            { //System.out.println("Detecto LLAVECORCHETE_ABIERTO_ABIERTA  en estado script");
		return symbol(sym.CORCHETE_ABIERTO);
            }
            // fall through
          case 152: break;
          case 31:
            { //System.out.println("Detecto CORCHETE_CERRADO  en estado script");
		return symbol(sym.CORCHETE_CERRADO);
            }
            // fall through
          case 153: break;
          case 32:
            { ////System.out.println("Comentario de linea detectado "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 154: break;
          case 33:
            { ////System.out.println("Detecto DIFERENTE");  
		return symbol(sym.DIFERENTE);
            }
            // fall through
          case 155: break;
          case 34:
            { //System.out.println("Detecto STRING: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.STRING_PARAMETRO,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""),"STRING"));
            }
            // fall through
          case 156: break;
          case 35:
            { ////System.out.println("Detecto OPERADOR_Y");
		return symbol(sym.OPERADOR_Y);
            }
            // fall through
          case 157: break;
          case 36:
            { //System.out.println("Detecto ENTERO_SCRIPTING_NEGATIVO: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.INTEGER_NEGATIVO,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""),"INTEGER"));
            }
            // fall through
          case 158: break;
          case 37:
            { ////System.out.println("Detecto DECIMAL: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.DECIMAL_POSITIVO,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""),"DECIMAL"));
            }
            // fall through
          case 159: break;
          case 38:
            { ////System.out.println("Detecto MENOR_IGUAL");  
		return symbol(sym.MENOR_IGUAL);
            }
            // fall through
          case 160: break;
          case 39:
            { ////System.out.println("Detecto igual_igual");  
		return symbol(sym.IGUAL_IGUAL);
            }
            // fall through
          case 161: break;
          case 40:
            { ////System.out.println("Detecto MAYOR_IGUAL");  
		return symbol(sym.MAYOR_IGUAL);
            }
            // fall through
          case 162: break;
          case 41:
            { ////System.out.println("Detecto IF");  
		return symbol(sym.IF);
            }
            // fall through
          case 163: break;
          case 42:
            { ////System.out.println("Detecto id");  
	return symbol(sym.ID);
            }
            // fall through
          case 164: break;
          case 43:
            { ////System.out.println("Detecto OPERADOR_O");
		return symbol(sym.OPERADOR_O);
            }
            // fall through
          case 165: break;
          case 44:
            { ////System.out.println("Detecto STRING: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.STRING_PARAMETRO,new Lexema(yytext().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", "").trim(),"STRING"));
            }
            // fall through
          case 166: break;
          case 45:
            { //System.out.println("Detecto ID_PARAMETRO:"+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));  
		return symbol(sym.ID_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 167: break;
          case 46:
            { ////System.out.println("Detecto CHAR: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.CARACTER,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", "").replaceAll("'", "").replaceAll("‘", "").replaceAll("’", ""),"CHAR"));
            }
            // fall through
          case 168: break;
          case 47:
            { ////System.out.println("Detecto DECIMAL: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.DECIMAL_NEGATIVO,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""),"DECIMAL"));
            }
            // fall through
          case 169: break;
          case 48:
            { ////System.out.println("Detecto ASC");  
		return symbol(sym.ASC);
            }
            // fall through
          case 170: break;
          case 49:
            { ////System.out.println("Detecto C_P");  
	return symbol(sym.C_P);
            }
            // fall through
          case 171: break;
          case 50:
            { ////System.out.println("Detecto END");  
		return symbol(sym.END);
            }
            // fall through
          case 172: break;
          case 51:
            { ////System.out.println("Detecto alt");  
	return symbol(sym.ALT);
            }
            // fall through
          case 173: break;
          case 52:
            { ////System.out.println("Detecto src");  
	return symbol(sym.SRC);
            }
            // fall through
          case 174: break;
          case 53:
            { ////System.out.println("Detecto SIZE_PARAMETRO_IMAGEN");  
		return symbol(sym.SIZE_PARAMETRO_IMAGEN,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 175: break;
          case 54:
            { System.out.println("Detecto ID_PARAMETRO element :"+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));  
		return symbol(sym.ID_PARAMETRO_ELEMENT,yytext().trim().replaceAll("'", "").replaceAll("‘", "").replaceAll("’", ""));
            }
            // fall through
          case 176: break;
          case 55:
            { ////System.out.println("Detecto SIZE_PARAMETRO: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));  
		return symbol(sym.SIZE_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 177: break;
          case 56:
            { ////System.out.println("Detecto C_BR");  
	return symbol(sym.C_BR);
            }
            // fall through
          case 178: break;
          case 57:
            { ////System.out.println("Detecto C_H1");  
	return symbol(sym.C_H1);
            }
            // fall through
          case 179: break;
          case 58:
            { ////System.out.println("Detecto DESC");  
		return symbol(sym.DESC);
            }
            // fall through
          case 180: break;
          case 59:
            { ////System.out.println("Detecto ELSE");  
		return symbol(sym.ELSE);
            }
            // fall through
          case 181: break;
          case 60:
            { ////System.out.println("Detecto EXIT");  
		return symbol(sym.EXIT);
            }
            // fall through
          case 182: break;
          case 61:
            { ////System.out.println("Detecto INIT");  
		return symbol(sym.INIT);
            }
            // fall through
          case 183: break;
          case 62:
            { //System.out.println("Detecto THEN");  
		return symbol(sym.THEN);
            }
            // fall through
          case 184: break;
          case 63:
            { ////System.out.println("Detecto tipoDato: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TIPOS_DATOS,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", "").toUpperCase());
            }
            // fall through
          case 185: break;
          case 64:
            { ////System.out.println("Detecto cols");  
	return symbol(sym.COLS);
            }
            // fall through
          case 186: break;
          case 65:
            { ////System.out.println("Detecto href");  
	return symbol(sym.HREF);
            }
            // fall through
          case 187: break;
          case 66:
            { ////System.out.println("Detecto name");  
	return symbol(sym.NAME);
            }
            // fall through
          case 188: break;
          case 67:
            { ////System.out.println("Detecto rows");  
	return symbol(sym.ROWS);
            }
            // fall through
          case 189: break;
          case 68:
            { //System.out.println("Detecto BOOLEAN: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
			return symbol(sym.BOOLEAN,new Lexema(yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""),"BOOLEAN"));
            }
            // fall through
          case 190: break;
          case 69:
            { ////System.out.println("Detecto type");  
	return symbol(sym.TYPE);
            }
            // fall through
          case 191: break;
          case 70:
            { ////System.out.println("Detecto COLOR_PARAMETRO: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));  
		return symbol(sym.COLOR_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 192: break;
          case 71:
            { ////System.out.println("Detecto C_DIV");  
	return symbol(sym.C_DIV);
            }
            // fall through
          case 193: break;
          case 72:
            { ////System.out.println("Detecto C_IMG");  
	return symbol(sym.C_IMG);
            }
            // fall through
          case 194: break;
          case 73:
            { ////System.out.println("Detecto WHILE");  
		return symbol(sym.WHILE);
            }
            // fall through
          case 195: break;
          case 74:
            { ////System.out.println("Detecto class");  
	return symbol(sym.CLASS);
            }
            // fall through
          case 196: break;
          case 75:
            { ////System.out.println("Detecto color");  
	return symbol(sym.COLOR);
            }
            // fall through
          case 197: break;
          case 76:
            { ////System.out.println("Detecto width");  
	return symbol(sym.WIDTH);
            }
            // fall through
          case 198: break;
          case 77:
            { System.out.println("Detecto LINK_PARAMETRO:"+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));  
	return symbol(sym.LINK_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 199: break;
          case 78:
            { ////System.out.println("Detecto ALING_PARAMETRO");  
	return symbol(sym.ALING_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 200: break;
          case 79:
            { ////System.out.println("Detecto TYPE_PARAMETRO");  
	return symbol(sym.TYPE_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 201: break;
          case 80:
            { ////System.out.println("Detecto C_BODY");  
	return symbol(sym.C_BODY);
            }
            // fall through
          case 202: break;
          case 81:
            { ////System.out.println("Detecto C_GCIC");  
	return symbol(sym.C_GCIC);
            }
            // fall through
          case 203: break;
          case 82:
            { ////System.out.println("Detecto C_HEAD");  
	return symbol(sym.C_HEAD);
            }
            // fall through
          case 204: break;
          case 83:
            { ////System.out.println("Detecto C_LINK");  
	return symbol(sym.C_LINK);
            }
            // fall through
          case 205: break;
          case 84:
            { ////System.out.println("Detecto C_SPAM");  
	return symbol(sym.C_SPAM);
            }
            // fall through
          case 206: break;
          case 85:
            { ////System.out.println("Detecto HUNTIL");  
		return symbol(sym.HUNTIL);
            }
            // fall through
          case 207: break;
          case 86:
            { ////System.out.println("Detecto INSERT");  
		return symbol(sym.INSERT);
            }
            // fall through
          case 208: break;
          case 87:
            { ////System.out.println("Detecto REPEAT");  
		return symbol(sym.REPEAT);
            }
            // fall through
          case 209: break;
          case 88:
            { ////System.out.println("Detecto height");  
	return symbol(sym.HEIGHT);
            }
            // fall through
          case 210: break;
          case 89:
            // lookahead expression with fixed lookahead length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -6);
            { System.out.println("Detecto TEXTO_ETIQUETA: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TEXTO_ETIQUETA,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 211: break;
          case 90:
            { ////System.out.println("Detecto FAMILY_PARAMETRO");  
	return symbol(sym.FAMILY_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 212: break;
          case 91:
            { ////System.out.println("Comentario de bloque detectado");
            }
            // fall through
          case 213: break;
          case 92:
            { //System.out.println("Detecto global en estado script");
			return symbol(sym.GLOBAL );
            }
            // fall through
          case 214: break;
          case 93:
            { ////System.out.println("Detecto C_INPUT");  
	return symbol(sym.C_INPUT);
            }
            // fall through
          case 215: break;
          case 94:
            { ////System.out.println("Detecto C_TITLE");  
	return symbol(sym.C_TITLE);
            }
            // fall through
          case 216: break;
          case 95:
            { ////System.out.println("Detecto ON_LOAD");  
		return symbol(sym.ON_LOAD);
            }
            // fall through
          case 217: break;
          case 96:
            { ////System.out.println("Detecto REVERSE");  
		return symbol(sym.REVERSE);
            }
            // fall through
          case 218: break;
          case 97:
            { ////System.out.println("Detecto onclick");  
	return symbol(sym.ONCLICK);
            }
            // fall through
          case 219: break;
          case 98:
            // lookahead expression with fixed lookahead length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -7);
            { System.out.println("Detecto TEXTO_ETIQUETA: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TEXTO_ETIQUETA,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 220: break;
          case 99:
            { ////System.out.println("Detecto C_BUTTON");  
	return symbol(sym.C_BUTTON);
            }
            // fall through
          case 221: break;
          case 100:
            { ////System.out.println("Detecto C_OPTION");  
	return symbol(sym.C_OPTION);
            }
            // fall through
          case 222: break;
          case 101:
            { ////System.out.println("Detecto C_SELECT");  
	return symbol(sym.C_SELECT);
            }
            // fall through
          case 223: break;
          case 102:
            { ////System.out.println("Detecto REDIRECT");  
		return symbol(sym.REDIRECT);
            }
            // fall through
          case 224: break;
          case 103:
            { System.out.println("Detecto NOMBRE_FUNCION : "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.NOMBRE_FUNCION,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 225: break;
          case 104:
            { ////System.out.println("Detecto THENWHILE");  
		return symbol(sym.THENWHILE);
            }
            // fall through
          case 226: break;
          case 105:
            { ////System.out.println("Detecto font-size");  
	return symbol(sym.FONT_SIZE);
            }
            // fall through
          case 227: break;
          case 106:
            // lookahead expression with fixed lookahead length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -9);
            { System.out.println("Detecto TEXTO_ETIQUETA: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TEXTO_ETIQUETA,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 228: break;
          case 107:
            { ////System.out.println("Detecto ALERT_INFO");  
		return symbol(sym.ALERT_INFO);
            }
            // fall through
          case 229: break;
          case 108:
            { ////System.out.println("Detecto C_TEXTAREA");  
	return symbol(sym.C_TEXTAREA);
            }
            // fall through
          case 230: break;
          case 109:
            { ////System.out.println("Detecto LETPAR_NUM");  
		return symbol(sym.LETPAR_NUM);
            }
            // fall through
          case 231: break;
          case 110:
            { ////System.out.println("Detecto background");  
	return symbol(sym.BACKGROUND);
            }
            // fall through
          case 232: break;
          case 111:
            { ////System.out.println("Detecto text-align");  
	return symbol(sym.TEXT_ALIGN);
            }
            // fall through
          case 233: break;
          case 112:
            // lookahead expression with fixed lookahead length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -10);
            { System.out.println("Detecto TEXTO_ETIQUETA: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TEXTO_ETIQUETA,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 234: break;
          case 113:
            { System.out.println("		Detecto C_SCRIPTING entrada");
		//System.out.println("Va a entrar a estado scripting");
		yybegin(SCRIPTING);
		return symbol(sym.C_SCRIPTING);
            }
            // fall through
          case 235: break;
          case 114:
            { ////System.out.println("Detecto font-family");  
	return symbol(sym.FONT_FAMILY);
            }
            // fall through
          case 236: break;
          case 115:
            { //System.out.println("Detecto C_SCRIPTING salida");
			//System.out.println("Va a regeresar a estado inicial");
			yybegin(YYINITIAL);
			return symbol(sym.C_SCRIPTING);
            }
            // fall through
          case 237: break;
          case 116:
            // lookahead expression with fixed lookahead length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -11);
            { System.out.println("Detecto TEXTO_ETIQUETA: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TEXTO_ETIQUETA,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 238: break;
          case 117:
            { ////System.out.println("Detecto LETIMPAR_NUM");  
		return symbol(sym.LETIMPAR_NUM);
            }
            // fall through
          case 239: break;
          case 118:
            { //System.out.println("Detecto NOMBRE_FUNCION_PARAMETRO : "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.NOMBRE_FUNCION_PARAMETRO,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 240: break;
          case 119:
            { ////System.out.println("Detecto NUM_ALEATORIO");  
		return symbol(sym.NUM_ALEATORIO);
            }
            // fall through
          case 241: break;
          case 120:
            { System.out.println("Detecto getElementById");  
		return symbol(sym.GET_ELEMENT_BY_ID);
            }
            // fall through
          case 242: break;
          case 121:
            // lookahead expression with fixed lookahead length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -13);
            { System.out.println("Detecto TEXTO_ETIQUETA: "+yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
		return symbol(sym.TEXTO_ETIQUETA,yytext().trim().replaceAll("\"", "").replaceAll("“", "").replaceAll("”", ""));
            }
            // fall through
          case 243: break;
          case 122:
            { ////System.out.println("Detecto CARACTER_ALEATORIO");  
		return symbol(sym.CARACTER_ALEATORIO);
            }
            // fall through
          case 244: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String[] argv) {
    if (argv.length == 0) {
      System.out.println("Usage : java lexico [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          // Side-effect: is encodingName valid?
          java.nio.charset.Charset.forName(encodingName);
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        lexico scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new lexico(reader);
          while ( !scanner.zzAtEOF ) scanner.next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
